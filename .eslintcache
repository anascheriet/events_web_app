[{"/Users/anascheriet/Documents/Projects/React/events_web_app/src/index.js":"1","/Users/anascheriet/Documents/Projects/React/events_web_app/src/App.js":"2","/Users/anascheriet/Documents/Projects/React/events_web_app/src/reportWebVitals.js":"3","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Sidebar.js":"4","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/SideBar.js":"5","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/NavBar.js":"6","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Navbar.js":"7","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Content.js":"8","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/rootReducer.js":"9","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/userReducer.js":"10","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/api.js":"11","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/login.js":"12","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Login.js":"13","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Exemple.js":"14","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/logoutAction.js":"15","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadUserInfo.js":"16","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loginAction.js":"17","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventTypeReducer.js":"18","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/getTypesAction.js":"19","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/eventTypeCUD.js":"20","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/animations.js":"21","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/CountryCityDATA.js":"22","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/eventAction.js":"23","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/Notifications.js":"24","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/loadEventAction.js":"25","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventReducer.js":"26","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventsDashboard.js":"27","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventEditForm.js":"28","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventForm.js":"29","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventTypes.js":"30","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/ClientReducer.js":"31","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/clientActions/getAllEventsAction.js":"32","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventsHome.js":"33","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/Event.js":"34","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/util.js":"35","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventDetail.js":"36"},{"size":1724,"mtime":1611175507291,"results":"37","hashOfConfig":"38"},{"size":2317,"mtime":1611320008208,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1610046698593,"results":"40","hashOfConfig":"38"},{"size":958,"mtime":1611181400365,"results":"41","hashOfConfig":"38"},{"size":967,"mtime":1610059435350,"results":"42","hashOfConfig":"38"},{"size":484,"mtime":1610059441419,"results":"43","hashOfConfig":"38"},{"size":1742,"mtime":1611247686019,"results":"44","hashOfConfig":"38"},{"size":256,"mtime":1611178182555,"results":"45","hashOfConfig":"38"},{"size":432,"mtime":1611230950749,"results":"46","hashOfConfig":"38"},{"size":886,"mtime":1611181197971,"results":"47","hashOfConfig":"38"},{"size":1669,"mtime":1611328411271,"results":"48","hashOfConfig":"38"},{"size":191,"mtime":1610225178281,"results":"49","hashOfConfig":"38"},{"size":2375,"mtime":1611187036129,"results":"50","hashOfConfig":"38"},{"size":3120,"mtime":1610492708884,"results":"51","hashOfConfig":"38"},{"size":230,"mtime":1611172963777,"results":"52","hashOfConfig":"38"},{"size":358,"mtime":1611181242922,"results":"53","hashOfConfig":"38"},{"size":373,"mtime":1610712910187,"results":"54","hashOfConfig":"38"},{"size":341,"mtime":1611161273030,"results":"55","hashOfConfig":"38"},{"size":307,"mtime":1611319663689,"results":"56","hashOfConfig":"38"},{"size":201,"mtime":1610652907595,"results":"57","hashOfConfig":"38"},{"size":553,"mtime":1611257977076,"results":"58","hashOfConfig":"38"},{"size":1032381,"mtime":1610998461066,"results":"59","hashOfConfig":"38"},{"size":173,"mtime":1611161749133,"results":"60","hashOfConfig":"38"},{"size":597,"mtime":1611179050768,"results":"61","hashOfConfig":"38"},{"size":479,"mtime":1611164041248,"results":"62","hashOfConfig":"38"},{"size":496,"mtime":1611186851562,"results":"63","hashOfConfig":"38"},{"size":4591,"mtime":1611259249297,"results":"64","hashOfConfig":"38"},{"size":7465,"mtime":1611229810292,"results":"65","hashOfConfig":"38"},{"size":8060,"mtime":1611329421850,"results":"66","hashOfConfig":"38"},{"size":6520,"mtime":1611319729189,"results":"67","hashOfConfig":"38"},{"size":304,"mtime":1611231455512,"results":"68","hashOfConfig":"38"},{"size":304,"mtime":1611231451894,"results":"69","hashOfConfig":"38"},{"size":1615,"mtime":1611258849261,"results":"70","hashOfConfig":"38"},{"size":1389,"mtime":1611259048441,"results":"71","hashOfConfig":"38"},{"size":359,"mtime":1611254354787,"results":"72","hashOfConfig":"38"},{"size":6152,"mtime":1611329464910,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"12qyaxg",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/anascheriet/Documents/Projects/React/events_web_app/src/index.js",[],["152","153"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/App.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/reportWebVitals.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Sidebar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/SideBar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/NavBar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Navbar.js",["154","155"],"import React from \"react\";\nimport { Menu, Dropdown } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutAction } from \"../redux/actions/Users/logoutAction\"\nimport { useHistory } from \"react-router-dom\";\nconst Navbar = ({ setToggle }) => {\n\n  const dispatch = useDispatch();\n\n  const { token, user } = useSelector(state => state.userState);\n\n  const history = useHistory();\n\n\n  const isAdmin = token !== null && user?.role?.name !== \"Client\";\n\n  const logOut = () => {\n    dispatch(logoutAction());\n    history.push(\"/\");\n  }\n\n  const menu = (\n    <Menu style={{ backgroundColor: \"#14213d\" }}>\n      <Menu.Item >\n        <a target=\"_blank\" className=\"menuLink\" style={{ color: \"#fdde6c\" }} >\n          <i className=\"fas fa-user\" style={{ marginRight: \"1rem\" }} />\n              Profile\n            </a>\n      </Menu.Item>\n      <Menu.Item >\n        <a onClick={logOut} className=\"menuLink\" target=\"_blank\" style={{ color: \"#fdde6c\" }} >\n          <i className=\"fas fa-sign-out-alt\" style={{ marginRight: \"1rem\" }} />\n              Log out\n            </a>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"brand\">\n        {isAdmin && <div className=\"hamburger\" onClick={setToggle}>\n          <div />\n          <div />\n          <div />\n        </div>}\n\n        <div className=\"logo\">\n          <a style={{ color: \"#fdde6c\", textTransform: \"lowercase\", paddingLeft: \"2rem\", fontSize: \"25px\" }} href=\"#!\">eventor</a>\n        </div>\n      </div>\n\n      <Dropdown overlay={menu}>\n        <div className=\"left\">\n          <i style={{ color: \"#fdde6c\" }} className=\"fas fa-chevron-down\" />\n        </div>\n      </Dropdown>\n    </div>\n  );\n};\n\n\nexport default Navbar;\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Content.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/rootReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/userReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/api.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/login.js",["156","157","158","159"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Login.js",["160","161"],"import { motion } from 'framer-motion';\nimport React from 'react'\nimport \"./login.scss\"\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/actions/Users/loginAction';\nimport { useHistory } from 'react-router-dom';\n\nexport const Login = () => {\n\n  //Router redirector\n  const history = useHistory();\n\n  //need a dispatcher that executes the action !!!!!!!!!!:D\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    username: '',\n    password: ''\n  }\n\n  const ValidationSchema = new Yup.ObjectSchema({\n    username: Yup.string().required(),\n    password: Yup.string().required()\n    /* password: Yup.string().matches(\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$\") */\n  })\n\n  const submitHandler = (values) => {\n    dispatch(login(values));\n    history.push(\"/Events\");\n  }\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: ValidationSchema,\n    onSubmit: submitHandler\n  })\n\n\n  return (\n    <div className=\"container\">\n      <motion.div\n        className=\"logo-container\"\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ ease: \"backOut\", duration: 1 }}>\n        <div className=\"name\">\n          <h2>eventor</h2>\n        </div>\n        <div className=\"description\">\n          <h2>EVENT PLANNING.</h2>\n        </div>\n      </motion.div>\n\n      <div className=\"form\">\n        <form onSubmit={formik.handleSubmit}>\n          <label className=\"label\">USERNAME</label>\n          <br />\n          <input type=\"text\" name=\"username\" className=\"input\" {...formik.getFieldProps(\"username\")} />\n          <br />\n          {formik.touched.username && formik.errors.username &&\n            <span>{formik.errors.username}</span>}\n          <br />\n          <label className=\"label\">PASSWORD</label>\n          <br />\n          <input type=\"password\" name=\"password\" className=\"input\" {...formik.getFieldProps(\"password\")} />\n          <br />\n          {formik.touched.password && formik.errors.password &&\n            <span>{formik.errors.password}</span>}\n          <br />\n\n          <button type=\"submit\" className=\"submitBtn\" >Log In</button>\n\n        </form>\n        <div className=\"links\">\n          <a >Create Account</a>\n          <a >Forgot Password?</a>\n        </div>\n      </div>\n\n    </div>\n  );\n\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Exemple.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/logoutAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadUserInfo.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loginAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventTypeReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/getTypesAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/eventTypeCUD.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/animations.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/CountryCityDATA.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/eventAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/Notifications.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/loadEventAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventsDashboard.js",["162"],"import React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Button, ButtonGroup, Card, Header, Icon, Divider } from 'semantic-ui-react'\nimport { Drawer } from 'antd';\nimport \"./eventsDashboard.scss\"\nimport { popup } from '../../../common/animations';\nimport { EventForm } from './EventForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadUserInfo } from '../../../redux/actions/Users/loadUserInfo';\nimport { EventEditForm } from './EventEditForm';\nimport { getAllEventTypes } from '../../../redux/actions/eventTypes/getTypesAction';\nimport { loadEventAction, unMountDrawer } from '../../../redux/actions/eventActions/loadEventAction';\nimport { formatDate, formatImageLink } from '../../../common/util';\n\nexport const EventsDashboard = () => {\n\n\n    //get user Info on component load \n    useEffect(() => {\n        console.log(\"here\");\n        dispatch(loadUserInfo());\n        dispatch(getAllEventTypes);\n    }, []);\n\n    //Getting the state\n    const { createdEvents } = useSelector(state => state.userState);\n\n    const { drawer } = useSelector(state => state.eventState);\n\n    //set up the dispatcher for actions (api calls)\n    const dispatch = useDispatch();\n\n    //setUp Drawer for Create/Edit event form\n    const [visibleDrawer, setVisibleDrawer] = useState(false);\n\n    const showDrawer = () => {\n        setVisibleDrawer(true);\n    };\n    const closeDrawer = () => {\n        setVisibleDrawer(false);\n    };\n\n    //Set up conditional rendering of edit event form\n    const [editDrawer, setEditDrawer] = useState(false);\n\n    const showEDrawer = () => {\n        setEditDrawer(true);\n    };\n\n    const closeEDrawer = () => {\n        setEditDrawer(false);\n        dispatch(unMountDrawer());\n    };\n\n    const openEditEventForm = async (id) => {\n        showEDrawer();\n        dispatch(loadEventAction(id));\n    }\n\n    return (\n        <>\n            <div className=\"header\">\n                <Header as='h2'>\n                    <Icon name='calendar' />\n                    <Header.Content>\n                        Events List\n      <Header.Subheader>Manage your events</Header.Subheader>\n                    </Header.Content>\n                </Header>\n                <Button onClick={showDrawer} color=\"green\"><Icon name=\"calendar\" /> Create new Event</Button>\n            </div>\n\n            <Divider />\n            <Card.Group >\n                {createdEvents?.map((item) => (\n                    <motion.div key={item.id} className=\"card\" variants={popup} initial=\"hidden\" animate=\"show\">\n                        <Card \n                            key={item.id} color=\"yellow\" >\n                            <img style={{ width: \"20.7rem\", height: \"20rem\" }} src={formatImageLink(item.imagePath)} alt=\"img\" />\n                            <Card.Content>\n                                <Card.Header>{item.eventName}</Card.Header>\n                                <Card.Meta>\n                                    <span>{formatDate(item.eventDate)}</span>\n                                </Card.Meta>\n                                <Card.Description>\n                                    {item.description.substring(1, 60)}...\n                                </Card.Description>\n                            </Card.Content>\n                            <Card.Content extra>\n                                <ButtonGroup widths={2}>\n                                    <Button onClick={() => openEditEventForm(item.id)} basic color='blue' content='Edit' />\n                                    <Button basic color='red' content='Delete' />\n                                </ButtonGroup>\n                            </Card.Content>\n                        </Card>\n                    </motion.div>\n\n                ))}\n            </Card.Group>\n\n            {/* Create form Drawer  */}\n            <Drawer\n                width={400}\n                placement=\"right\"\n                closable={false}\n                onClose={closeDrawer}\n                visible={visibleDrawer}\n            >\n                <EventForm\n                    closeDrawer={closeDrawer}\n                />\n            </Drawer>\n\n            {/* Edit form Drawer  */}\n            {drawer &&\n                <Drawer\n                    width={400}\n                    placement=\"right\"\n                    closable={false}\n                    onClose={closeEDrawer}\n                    visible={editDrawer}\n                >\n                    <EventEditForm closeEDrawer={closeEDrawer} />\n                </Drawer>\n            }\n        </>\n\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventEditForm.js",["163"],"import { useFormik } from 'formik';\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { myValidationSchema } from './EventForm';\nimport {\n    Form,\n    Input,\n    Select,\n    DatePicker,\n    InputNumber,\n    Upload,\n    Button as AntdButton\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Button } from 'semantic-ui-react';\nimport { eventsUrls, uploadImageUrl } from '../../../redux/api';\nimport axios from 'axios';\nimport { editToast } from '../../../common/Notifications';\n\nexport const EventEditForm = ({ closeEDrawer }) => {\n\n\n    //retrieve event types array from evTypes reducer\n    const { eventTypes } = useSelector(state => state.eventTypesState);\n    const { event } = useSelector(state => state.eventState);\n\n    useEffect(() => {\n     \n        console.log(event);\n    }, [])\n\n\n    //Set up Event Object to object\n    const initialValues = {\n        eventName: event.eventName,\n        description: event.description,\n        country: event.country,\n        city: event.city,\n        availabletickets: event.availableTickets,\n        ticketprice: event.ticketPrice,\n        eventtypeid: event.eventType.id,\n        eventDate: null,\n        image: event.imagePath,\n    }\n\n    //Set up formik object to handle the form\n    const formik = useFormik({\n        validationSchema: myValidationSchema,\n        initialValues: initialValues,\n    })\n\n    //Image upload logic\n    const eventImageUpload = async (file) => {\n        let formData = new FormData();\n        formData.append('file', file);\n        let response = await axios.post(uploadImageUrl, formData);\n        //Assign response to image path\n        formik.values.image = response.data;\n    }\n\n\n    //Country / City Dropdown logic\n    const [CountryCity, setCountryCity] = useState([]);\n    const [Cities, setCities] = useState([]);\n\n    //fetch event types for form event type dropdown from the api on component load\n    useEffect(() => {\n        const fetchCountryAPI = async () => {\n            let response = await axios.get(\"https://countriesnow.space/api/v0.1/countries\");\n            setCountryCity(response.data.data);\n        }\n        fetchCountryAPI();\n    }, [])\n\n    const submitHandler = async (ev) => {\n        console.log(ev);\n        await axios.patch(eventsUrls.edit(event.id), ev)\n        closeEDrawer();\n        editToast(\"The event Has been Updated! ✅\");\n    }\n\n\n    return (\n        <Form\n            className=\"eventForm\"\n            wrapperCol={{ span: 26 }}\n            layout=\"vertical\"\n            onFinish={() => submitHandler(formik.values)}\n        >\n            <Form.Item label=\"Event Name\">\n                <Input name='eventName' {...formik.getFieldProps('eventName')} />\n                {formik.touched.eventName && formik.errors.eventName &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.eventName}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Event Type\">\n                <Select\n                    name='eventtypeid'\n                    onChange={evtype => formik.setFieldValue('eventtypeid', evtype)}\n                    value={formik.values.eventtypeid}>\n                    {eventTypes.map(eType => {\n                        return <Select.Option value={eType.id}>{eType.name}</Select.Option>\n                    })}\n                </Select>\n                {formik.touched.eventtypeid && formik.errors.eventtypeid &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.eventtypeid}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Country\">\n                <Select\n                    name='country'\n                    onChange={country => formik.setFieldValue('country', country)}\n                    onSelect={country => ((setCities(CountryCity.filter(x => x.country === country)[0].cities), formik.setFieldValue('country', country)))}\n                    value={formik.values.country}>\n                    {CountryCity.map(c => {\n                        return <Select.Option value={c.country}>{c.country}</Select.Option>\n                    })}\n                </Select>\n                {formik.touched.country && formik.values.country === \"\" && console.log(formik.errors.country)}\n            </Form.Item>\n            <Form.Item label=\"City\">\n                <Select\n                    name='city'\n                    onChange={city => (formik.setFieldValue('city', city))}\n                    value={formik.values.city}>\n                    {Cities.map((c, index) => {\n                        return <Select.Option key={index} value={c}>{c}</Select.Option>\n                    })}\n\n                </Select>\n                {formik.touched.city && formik.errors.city &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.city}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Description\">\n                <Input.TextArea name='description' {...formik.getFieldProps('description')} />\n                {formik.touched.description && formik.errors.description &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.description}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Event Date\">\n\n                <DatePicker\n                    name='eventDate'\n                    onChange={date => (formik.setFieldValue('eventDate', date))}\n                    value={formik.values.eventDate}\n                    className=\"input\"\n                    showTime\n                    format=\"YYYY-MM-DD HH:mm:ss\" />\n                {formik.touched.eventDate && formik.errors.eventDate &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.eventDate}</pre>}\n\n            </Form.Item>\n            <Form.Item label=\"Ticket Price\">\n                <InputNumber\n                    name='ticketprice'\n                    onChange={price => formik.setFieldValue('ticketprice', price)}\n                    value={formik.values.ticketprice}\n                    style={{ width: \"25.2rem\" }} />\n                {formik.touched.ticketprice && formik.errors.ticketprice &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.ticketprice}</pre>}\n            </Form.Item>\n            <Form.Item label=\"No of available tickets\">\n                <Input\n                    name='availabletickets'\n                    /* onChange={tickets => formik.setFieldValue('availabletickets', tickets)} */\n                    {...formik.getFieldProps('availabletickets')}\n                    value={formik.values.availabletickets}\n                    style={{ width: \"25.2rem\" }} />\n                {formik.touched.availabletickets && formik.errors.availabletickets &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.availabletickets}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Event Image\">\n                <Upload name='image' action={eventImageUpload}>\n                    <AntdButton icon={<UploadOutlined />}>Click to Upload</AntdButton>\n                </Upload>\n            </Form.Item>\n            <Form.Item >\n                <Button color=\"blue\" disabled={Object.keys(formik.errors).length > 1} htmlType=\"submit\">Update</Button>\n                <Button color=\"grey\" type=\"button\" onClick={closeEDrawer}>Cancel</Button>\n            </Form.Item>\n        </Form>\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventForm.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventTypes.js",["164"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/ClientReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/clientActions/getAllEventsAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventsHome.js",["165"],"import { motion, AnimatePresence, AnimateSharedLayout } from 'framer-motion';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { getAllEventsAction } from '../../../redux/actions/clientActions/getAllEventsAction';\nimport { Event } from \"./Event\"\nimport { EventDetail } from './EventDetail';\nimport \"./EventHome.scss\"\nexport const EventsHome = () => {\n\n    const dispatch = useDispatch();\n\n    //get current location\n    const location = useLocation();\n    const pathId = location.pathname.split(\"/\")[2];\n\n    //fetch existing events from the api\n    useEffect(() => {\n        dispatch(getAllEventsAction());\n        console.log(location.pathname);\n    }, [])\n    //get events from the state\n    const { availableEvents } = useSelector(state => state.clientState);\n\n\n    return (\n        <motion.div className=\"eventList\">\n            <AnimateSharedLayout type=\"switch\">\n                {/* wrap all the components that will be transitioning*/}\n                <AnimatePresence>\n                    {/* The component that will be animated should have a conditional toggle, pathId here */}\n                    {pathId && <EventDetail pathId={pathId} />}\n                </AnimatePresence>\n                <h2>Available events</h2>\n                <motion.div className=\"events\" >\n                    {availableEvents.map((event) => {\n                        return <Event event={event.event} />\n                    })}\n                </motion.div>\n            </AnimateSharedLayout>\n        </motion.div>\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/Event.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/util.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventDetail.js",["166"],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":25,"column":9,"nodeType":"173","endLine":25,"endColumn":79},{"ruleId":"171","severity":1,"message":"172","line":31,"column":9,"nodeType":"173","endLine":31,"endColumn":96},{"ruleId":"174","severity":1,"message":"175","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":14},{"ruleId":"174","severity":1,"message":"178","line":2,"column":16,"nodeType":"176","messageId":"177","endLine":2,"endColumn":21},{"ruleId":"174","severity":1,"message":"179","line":2,"column":23,"nodeType":"176","messageId":"177","endLine":2,"endColumn":29},{"ruleId":"174","severity":1,"message":"180","line":2,"column":31,"nodeType":"176","messageId":"177","endLine":2,"endColumn":39},{"ruleId":"171","severity":1,"message":"172","line":77,"column":11,"nodeType":"173","endLine":77,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":78,"column":11,"nodeType":"173","endLine":78,"endColumn":15},{"ruleId":"181","severity":1,"message":"182","line":23,"column":8,"nodeType":"183","endLine":23,"endColumn":10,"suggestions":"184"},{"ruleId":"181","severity":1,"message":"185","line":30,"column":8,"nodeType":"183","endLine":30,"endColumn":10,"suggestions":"186"},{"ruleId":"181","severity":1,"message":"182","line":19,"column":8,"nodeType":"183","endLine":19,"endColumn":20,"suggestions":"187"},{"ruleId":"181","severity":1,"message":"188","line":21,"column":8,"nodeType":"183","endLine":21,"endColumn":10,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":131,"column":146,"nodeType":"192","messageId":"193","endLine":131,"endColumn":151},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["196"],"React Hook useEffect has a missing dependency: 'event'. Either include it or remove the dependency array.",["197"],["198"],"React Hook useEffect has missing dependencies: 'dispatch' and 'location.pathname'. Either include them or remove the dependency array.",["199"],"no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [dispatch]",{"range":"208","text":"209"},"Update the dependencies array to be: [event]",{"range":"210","text":"211"},"Update the dependencies array to be: [dispatch, eventTypes]",{"range":"212","text":"213"},"Update the dependencies array to be: [dispatch, location.pathname]",{"range":"214","text":"215"},[976,978],"[dispatch]",[862,864],"[event]",[826,838],"[dispatch, eventTypes]",[758,760],"[dispatch, location.pathname]"]