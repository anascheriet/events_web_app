[{"/Users/anascheriet/Documents/Projects/React/events_web_app/src/index.js":"1","/Users/anascheriet/Documents/Projects/React/events_web_app/src/App.js":"2","/Users/anascheriet/Documents/Projects/React/events_web_app/src/reportWebVitals.js":"3","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Sidebar.js":"4","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/SideBar.js":"5","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/NavBar.js":"6","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Navbar.js":"7","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Content.js":"8","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/rootReducer.js":"9","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/userReducer.js":"10","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/api.js":"11","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/login.js":"12","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Login.js":"13","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/dashboard.js":"14","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Dashboard.js":"15","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventsDashboard.js":"16","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Exemple.js":"17","/Users/anascheriet/Documents/Projects/React/events_web_app/src/animations.js":"18","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventForm.js":"19","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventAction.js":"20","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/logoutAction.js":"21","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadUserInfo.js":"22","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loginAction.js":"23","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventTypeReducer.js":"24","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/getTypesAction.js":"25","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventTypes.js":"26","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/eventTypeCUD.js":"27","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Notifications.js":"28"},{"size":1727,"mtime":1610636778374,"results":"29","hashOfConfig":"30"},{"size":1196,"mtime":1610642963102,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1610046698593,"results":"32","hashOfConfig":"30"},{"size":1085,"mtime":1610640574434,"results":"33","hashOfConfig":"30"},{"size":967,"mtime":1610059435350,"results":"34","hashOfConfig":"30"},{"size":484,"mtime":1610059441419,"results":"35","hashOfConfig":"30"},{"size":1532,"mtime":1610639617735,"results":"36","hashOfConfig":"30"},{"size":256,"mtime":1610492706674,"results":"37","hashOfConfig":"30"},{"size":274,"mtime":1610641143457,"results":"38","hashOfConfig":"30"},{"size":652,"mtime":1610638580948,"results":"39","hashOfConfig":"30"},{"size":1212,"mtime":1610712820584,"results":"40","hashOfConfig":"30"},{"size":191,"mtime":1610225178281,"results":"41","hashOfConfig":"30"},{"size":2271,"mtime":1610639617735,"results":"42","hashOfConfig":"30"},{"size":325,"mtime":1610385636815,"results":"43","hashOfConfig":"30"},{"size":186,"mtime":1610463293214,"results":"44","hashOfConfig":"30"},{"size":6091,"mtime":1610657412254,"results":"45","hashOfConfig":"30"},{"size":3120,"mtime":1610492708884,"results":"46","hashOfConfig":"30"},{"size":553,"mtime":1610653603759,"results":"47","hashOfConfig":"30"},{"size":6263,"mtime":1610657471437,"results":"48","hashOfConfig":"30"},{"size":176,"mtime":1610635209212,"results":"49","hashOfConfig":"30"},{"size":206,"mtime":1610639598057,"results":"50","hashOfConfig":"30"},{"size":330,"mtime":1610639614890,"results":"51","hashOfConfig":"30"},{"size":373,"mtime":1610712910187,"results":"52","hashOfConfig":"30"},{"size":341,"mtime":1610649708691,"results":"53","hashOfConfig":"30"},{"size":306,"mtime":1610649879875,"results":"54","hashOfConfig":"30"},{"size":5607,"mtime":1610657477447,"results":"55","hashOfConfig":"30"},{"size":201,"mtime":1610652907595,"results":"56","hashOfConfig":"30"},{"size":321,"mtime":1610653851243,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"12qyaxg",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/anascheriet/Documents/Projects/React/events_web_app/src/index.js",[],["121","122"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/App.js",["123"],"import React, { useState } from \"react\";\nimport \"simplebar\"; // or \"import SimpleBar from 'simplebar';\" if you want to use it manually.\nimport \"simplebar/dist/simplebar.css\";\nimport Navbar from \"./Layout/Navbar\";\nimport Sidebar from \"./Layout/Sidebar\";\nimport Content from \"./Layout/Content\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./styles.scss\";\nimport { EventsDashboard } from \"./Components/events/EventsDashboard\"\nimport { useSelector } from \"react-redux\";\nimport { Login } from \"./Components/auth/Login\";\nimport { ToastContainer } from \"react-toastify\";\nimport { EventTypes } from \"./Components/events/EventTypes\";\n\nfunction App() {\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const toggle = () => setToggleBtn(val => !val);\n\n  const { token } = useSelector(state => state.userState)\n  return (\n    <div >\n      <ToastContainer />\n      { token === null ? (\n        <Login />\n      ) : (\n          <>\n            <Navbar setToggle={toggle} toggleBtn={toggleBtn} />\n            <Sidebar setToggle={toggle} toggleBtn={toggleBtn} />\n            <Content toggleBtn={toggleBtn}>\n              <EventTypes />\n            </Content></>)}\n    </div>\n  );\n}\n\nexport default App;","/Users/anascheriet/Documents/Projects/React/events_web_app/src/reportWebVitals.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Sidebar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/SideBar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/NavBar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Navbar.js",["124","125"],"import React from \"react\";\nimport { Menu, Dropdown } from 'antd';\nimport { useDispatch } from \"react-redux\";\nimport { logoutAction } from \"../redux/actions/Users/logoutAction\"\nconst Navbar = ({ setToggle, toggleBtn }) => {\n\n    const dispatch = useDispatch();\n\n  const logOut = () => {\n    dispatch(logoutAction());\n  }\n\n    const menu = (\n        <Menu style={{backgroundColor: \"#14213d\"}}>\n          <Menu.Item >\n            <a target=\"_blank\" className=\"menuLink\" style={{color: \"#fdde6c\"}} >\n              <i className=\"fas fa-user\" style={{marginRight: \"1rem\"}}/>\n              Profile\n            </a>\n          </Menu.Item>\n          <Menu.Item >\n            <a onClick={logOut} className=\"menuLink\" target=\"_blank\" style={{color: \"#fdde6c\"}} >\n            <i className=\"fas fa-sign-out-alt\" style={{marginRight: \"1rem\"}}/>\n              Log out\n            </a>\n          </Menu.Item>\n        </Menu>\n      );\n    \n  return (\n    <div className={`${toggleBtn ? \"navbar\" : \"navbar collapse\"}`}>\n    <div className=\"brand\">\n      <div className=\"hamburger\" onClick={setToggle}>\n        <div />\n        <div />\n        <div />\n      </div>\n      <div className=\"logo\">\n        <a style={{ color: \"#fdde6c\", textTransform: \"lowercase\", paddingLeft: \"2rem\", fontSize:\"25px\" }} href=\"#!\">eventor</a>\n      </div>\n    </div>\n\n    <Dropdown overlay={menu}>\n      <div className=\"left\">\n        <i style={{ color: \"#fdde6c\" }}  className=\"fas fa-chevron-down\" />\n      </div>\n    </Dropdown>\n\n  </div>\n  );\n};\nexport default Navbar;\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Content.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/rootReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/userReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/api.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/login.js",["126","127","128","129"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Login.js",["130","131"],"import { motion } from 'framer-motion';\nimport React from 'react'\nimport \"./login.scss\"\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/actions/loginAction';\n\nexport const Login = () => {\n\n  //need a dispatcher that executes the action !!!!!!!!!!:D\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    username: '',\n    password: ''\n  }\n\n  const ValidationSchema = new Yup.ObjectSchema({\n    username: Yup.string().required(),\n    password: Yup.string().required()\n    /* password: Yup.string().matches(\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$\") */\n  })\n\n  const submitHandler = (values) => {\n    console.log(values);\n    dispatch(login(values));\n  }\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: ValidationSchema,\n    onSubmit: submitHandler\n  })\n\n\n  return (\n    <div className=\"container\">\n      <motion.div\n        className=\"logo-container\"\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ ease: \"backOut\", duration: 1 }}>\n        <div className=\"name\">\n          <h2>eventor</h2>\n        </div>\n        <div className=\"description\">\n          <h2>EVENT PLANNING.</h2>\n        </div>\n\n      </motion.div>\n\n\n      <div className=\"form\">\n        <form onSubmit={formik.handleSubmit}>\n          <label className=\"label\">USERNAME</label>\n          <br />\n          <input type=\"text\" name=\"username\" className=\"input\" {...formik.getFieldProps(\"username\")} />\n          <br />\n          {formik.touched.username && formik.errors.username &&\n            <span>{formik.errors.username}</span>}\n          <br />\n          <label className=\"label\">PASSWORD</label>\n          <br />\n          <input type=\"password\" name=\"password\" className=\"input\" {...formik.getFieldProps(\"password\")} />\n          <br />\n          {formik.touched.password && formik.errors.password &&\n            <span>{formik.errors.password}</span>}\n          <br />\n\n          <button type=\"submit\" className=\"submitBtn\" >Log In</button>\n\n        </form>\n        <div className=\"links\">\n          <a >Create Account</a>\n          <a >Forgot Password?</a>\n        </div>\n      </div>\n\n    </div>\n  );\n\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/dashboard.js",["132"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Dashboard.js",["133","134"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventsDashboard.js",["135","136","137","138","139"],"\n\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Button, ButtonGroup, Card, Header, Icon, Divider, Flag } from 'semantic-ui-react'\nimport { Drawer } from 'antd';\nimport \"./eventsDashboard.scss\"\nimport { fadeIn, popup } from '../../animations';\nimport { EventForm } from './EventForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadUserInfo } from '../../redux/actions/Users/loadUserInfo';\nimport { getAllEventTypes } from '../../redux/actions/eventTypes/getTypesAction';\n\nexport const EventsDashboard = () => {\n\n    //Getting the state\n    const { user } = useSelector(state => state.userState);\n    const { createdEvents } = user;\n\n    //set up the dispatcher for actions (api calls)\n    const dispatch = useDispatch();\n    //get user Info on component load \n    useEffect(() => {\n        dispatch(loadUserInfo());\n        console.log(createdEvents);\n        //dispatch(getAllEventTypes());\n    }, []);\n\n\n    //setUp Drawer for Create/Edit event form\n    const [visibleDrawer, setVisibleDrawer] = useState(false);\n\n    const showDrawer = () => {\n        setVisibleDrawer(true);\n    };\n    const closeDrawer = () => {\n        setVisibleDrawer(false);\n    };\n\n\n\n    const fakeData = [{\n        \"id\": 1,\n        \"eventName\": \"International Brand Consultant\",\n        \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n        \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n    },\n    {\n        \"id\": 2,\n        \"eventName\": \"International Brand Consultant\",\n        \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n        \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n    },\n    {\n        \"id\": 3,\n        \"eventName\": \"International Brand Consultant\",\n        \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n        \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n    }, {\n        \"id\": 4,\n        \"eventName\": \"International Brand Consultant\",\n        \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n        \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n    }, {\n        \"id\": 5,\n        \"eventName\": \"International Brand Consultant\",\n        \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n        \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n    }, {\n        \"id\": 6,\n        \"eventName\": \"International Brand Consultant\",\n        \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n        \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n    }, {\n        \"id\": 7,\n        \"eventName\": \"International Brand Consultant\",\n        \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n        \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n    }, {\n        \"id\": 8,\n        \"eventName\": \"International Brand Consultant\",\n        \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n        \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n    }, {\n        \"id\": 9,\n        \"eventName\": \"International Brand Consultant\",\n        \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n        \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n    }, {\n        \"id\": 10,\n        \"eventName\": \"International Brand Consultant\",\n        \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n        \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n    }, {\n        \"id\": 11,\n        \"eventName\": \"International Brand Consultant\",\n        \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n        \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n    }]\n\n    return (\n        <>\n            <div className=\"header\">\n                <Header as='h2'>\n                    <Icon name='calendar' />\n                    <Header.Content>\n                        Events List \n      <Header.Subheader>Manage your events</Header.Subheader>\n                    </Header.Content>\n                </Header>\n                <Button onClick={showDrawer} color=\"green\"><Icon name=\"calendar\" /> Create new Event</Button>\n            </div>\n\n            <Divider />\n            <Card.Group >\n                {createdEvents.map((item) => (\n                    <motion.div key={item.id} className=\"card\" variants={popup} initial=\"hidden\" animate=\"show\">\n                        <Card >\n                            <img src='https://dummyimage.com/300x180.png' alt='' />\n                            <Card.Content>\n                                <Card.Header>{item.eventName}</Card.Header>\n                                <Card.Meta>\n                                    <span className='date'>{/* {item.eventDate.split(\"T\")[0]} {item.eventDate.split(\"T\")[1].split(\".\")[0]} */}</span>\n                                </Card.Meta>\n                                <Card.Description>\n                                    {item.description.substring(1, 60)}...\n                                </Card.Description>\n                            </Card.Content>\n                            <Card.Content extra>\n                                <ButtonGroup widths={2}>\n                                    <Button basic color='blue' content='Edit' />\n                                    <Button basic color='red' content='Delete' />\n                                </ButtonGroup>\n                            </Card.Content>\n                        </Card>\n                    </motion.div>\n\n                ))}\n            </Card.Group>\n\n            {/* Create/Edit form Drawer  */}\n\n            <Drawer\n                width={400}\n                placement=\"right\"\n                closable={false}\n                onClose={closeDrawer}\n                visible={visibleDrawer}\n            >\n                <EventForm closeDrawer={closeDrawer} />\n            </Drawer>\n\n        </>\n\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Exemple.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/animations.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventForm.js",["140","141","142"],"import { Divider, Tooltip } from 'antd'\nimport React from 'react'\nimport {\n    Form,\n    Input,\n    Select,\n    DatePicker,\n    InputNumber,\n} from 'antd';\nimport \"./eventform.scss\"\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { Button } from 'semantic-ui-react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createEventAction } from '../../redux/actions/eventAction'\nimport { toast } from 'react-toastify';\nimport { successToast } from '../../Notifications';\n\n//TODO load event data to edit form\n\nexport const EventForm = ({ closeDrawer }) => {\n\n    //Set up Event Object\n    const initialValues = {\n        eventName: '',\n        description: '',\n        country: '',\n        city: '',\n        availabletickets: null,\n        ticketprice: null,\n        eventtypeid: 0,\n        eventDate: ''\n    }\n\n    //Set up object validation\n    const myValidationSchema = new Yup.ObjectSchema({\n        eventName: Yup.string().required(),\n        description: Yup.string().required(),\n        country: Yup.string().required(),\n        city: Yup.string().required(),\n        availabletickets: Yup.number().required().positive().integer(),\n        ticketprice: Yup.number().required().positive(),\n        eventtypeid: Yup.number().required(),\n        eventDate: Yup.string().required()\n    })\n\n\n    //Set up formik object to handle the form\n    const formik = useFormik({\n        validationSchema: myValidationSchema,\n        initialValues: initialValues,\n    })\n\n    //get events so we can add to them\n    const { user } = useSelector(state => state.userState);\n    const { createdEvents } = user;\n\n    //set uo the dispatcher\n    const dispatch = useDispatch()\n    //Submit method\n    const submitHandler = (event) => {\n        dispatch(createEventAction(event));\n        createdEvents.push(event);\n        closeDrawer();\n        successToast(\"The event Has been Created!\");\n    }\n\n\n    return (\n        <Form\n            className=\"eventForm\"\n            wrapperCol={{ span: 26 }}\n            layout=\"vertical\"\n            onFinish={() => submitHandler(formik.values)}\n        >\n            <Form.Item label=\"Event Name\">\n                <Input name='eventName' {...formik.getFieldProps('eventName')} />\n                {formik.touched.eventName && formik.errors.eventName &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.eventName}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Event Type\">\n                <Select\n                    name='eventtypeid'\n                    onChange={evtype => formik.setFieldValue('eventtypeid', evtype)}\n                    value={formik.values.eventtypeid}>\n                    <Select.Option value=\"5\">Sport</Select.Option>\n                </Select>\n                {formik.touched.eventtypeid && formik.errors.eventtypeid &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.eventtypeid}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Country\">\n                <Select\n                    name='country'\n                    onChange={country => formik.setFieldValue('country', country)}\n                    value={formik.values.country}>\n                    <Select.Option value=\"France\">France</Select.Option>\n                </Select>\n                {formik.touched.country && formik.values.country === \"\" && console.log(formik.errors.country)}\n            </Form.Item>\n            <Form.Item label=\"City\">\n                <Select\n                    name='city'\n                    onChange={city => (formik.setFieldValue('city', city))}\n                    value={formik.values.city}>\n                    <Select.Option value=\"Paris\">Paris</Select.Option>\n                </Select>\n                {formik.touched.city && formik.errors.city &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.city}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Description\">\n                <Input.TextArea name='description' {...formik.getFieldProps('description')} />\n                {formik.touched.description && formik.errors.description &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.description}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Event Date\">\n                <DatePicker\n                    name='eventDate'\n                    onChange={date => (formik.setFieldValue('eventDate', date))}\n                    value={formik.values.eventDate}\n                    className=\"input\"\n                    showTime\n                    format=\"YYYY-MM-DD HH:mm:ss\" />\n                {formik.touched.eventDate && formik.errors.eventDate &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.eventDate}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Ticket Price\">\n                <InputNumber\n                    name='ticketprice'\n                    onChange={price => formik.setFieldValue('ticketprice', price)}\n                    value={formik.values.ticketprice}\n                    style={{ width: \"25.2rem\" }} />\n                {formik.touched.ticketprice && formik.errors.ticketprice &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.ticketprice}</pre>}\n            </Form.Item>\n            <Form.Item label=\"No of available tickets\">\n                <Input\n                    name='availabletickets'\n                    /* onChange={tickets => formik.setFieldValue('availabletickets', tickets)} */\n                    {...formik.getFieldProps('availabletickets')}\n                    value={formik.values.availabletickets}\n                    style={{ width: \"25.2rem\" }} />\n                {formik.touched.availabletickets && formik.errors.availabletickets &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.availabletickets}</pre>}\n            </Form.Item>\n            <Form.Item >\n                <Button color=\"green\" disabled={Object.keys(formik.errors).length !== 0} htmlType=\"submit\">Submit</Button>\n                <Button color=\"grey\" onClick={closeDrawer}>Cancel</Button>\n            </Form.Item>\n        </Form>\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/logoutAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadUserInfo.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loginAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventTypeReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/getTypesAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventTypes.js",["143","144","145","146","147","148","149","150","151"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Header, Icon, Table, Menu, Divider, IconGroup } from 'semantic-ui-react'\nimport { getAllEventTypes } from '../../redux/actions/eventTypes/getTypesAction';\nimport { Tag, Modal, Form, Input, Space } from 'antd';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { createEventTypeAction } from '../../redux/actions/eventTypes/eventTypeCUD';\nimport { toast } from 'react-toastify';\nimport { successToast } from '../../Notifications';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\n\n\n//TODO load event type data to delete and edit models\n\nexport const EventTypes = () => {\n\n    const { eventTypes } = useSelector(state => state.eventTypesState);\n    const { user } = useSelector(state => state.userState);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getAllEventTypes());\n    }, [])\n\n    //Add event type modal\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const openModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const closeModal = () => {\n        setIsModalVisible(false);\n    };\n\n    //Delete Modal\n\n\n    const [isDModalVisible, setIsDModalVisible] = useState(false);\n    const openDModal = () => {\n        setIsDModalVisible(true);\n    };\n\n    const closeDModal = () => {\n        setIsDModalVisible(false);\n    };\n\n    //Load event Type\n    const [getEvType, setGetEvtType] = useState({ id: 0, name: \"\" });\n\n    const loadEType = (id) => {\n        const newObject = eventTypes.find(item => item.id === 10);\n        setGetEvtType(                   // object that we want to update\n            ...getEvType,    // keep all other key-value pairs\n            newObject    // update the value of specific key\n        );\n        openDModal();\n    }\n    //Form handling \n\n    //Initial Values\n    const myInitialValues = {\n        name: '',\n    }\n\n    //Validation\n    const myValidationSchema = new Yup.object({\n        name: Yup.string().required(),\n    })\n\n    //Form handler\n    const formik = useFormik({\n        validationSchema: myValidationSchema,\n        initialValues: myInitialValues\n    })\n\n    //Submit eType handler\n    const submitHandler = (eType) => {\n        eType.id = eventTypes[eventTypes.length - 1].id + 1;\n        dispatch(createEventTypeAction(eType));\n        eventTypes.push(eType);\n        setIsModalVisible(false);\n        successToast(\"Event Type has been Added ! 👌\");\n    }\n\n\n    return (\n        <>\n            <div className=\"header\">\n                <Header as='h2'>\n                    <Icon name='fas fa-list' />\n                    <Header.Content>\n                        Event Types List\n                        <Header.Subheader>Manage event categories</Header.Subheader>\n                    </Header.Content>\n                </Header>\n                <Button onClick={openModal} color=\"green\"><Icon name=\"calendar\" /> Create new Event Type</Button>\n            </div>\n            <Divider />\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Category Id</Table.HeaderCell>\n                        <Table.HeaderCell>Category Name</Table.HeaderCell>\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {eventTypes.map(item => {\n                        return <Table.Row key={item.id}>\n                            <Table.Cell>{item.id}</Table.Cell>\n                            <Table.Cell>{item.name}</Table.Cell>\n                            <Table.Cell>\n                                <Icon name=\"edit\" title=\"Edit\" color=\"blue\" size=\"large\" />\n                                &nbsp;&nbsp;\n                                <Icon size=\"large\" title=\"Delete\" name=\"trash\" color=\"red\" /></Table.Cell>\n                        </Table.Row>\n                    })}\n                </Table.Body>\n            </Table>\n\n\n            {/* Add Event type modal  */}\n            <Modal title=\"Add an Event Type\"\n                visible={isModalVisible}\n                onCancel={closeModal}\n                footer={[\n                    <Button onClick={closeModal}>\n                        Cancel\n                </Button>,\n                    <Button\n                        disabled={Object.keys(formik.errors).length !== 0}\n                        onClick={() => submitHandler(formik.values)}\n                        color=\"green\">\n                        Create\n                </Button>,\n                ]}>\n                <Form layout=\"vertical\">\n                    <Form.Item\n                        label=\"Type Name\">\n                        <Input name='name' {...formik.getFieldProps('name')} />\n                        {formik.touched.name && formik.errors.name && <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.name}</pre>}\n                    </Form.Item>\n                </Form>\n            </Modal>\n\n\n            {/* Delete evType Modal */}\n            <Modal title={`Delete event type ${getEvType.id}`}\n                visible={isDModalVisible}\n                onCancel={closeDModal}\n                footer={[\n                    <Button onClick={closeDModal}>\n                        Cancel\n                </Button>,\n                    <Button\n                        color=\"red\">\n                        Delete\n                </Button>,\n                ]}>\n            </Modal>\n\n        </>\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/eventTypeCUD.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Notifications.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":9,"column":10,"nodeType":"158","messageId":"159","endLine":9,"endColumn":25},{"ruleId":"160","severity":1,"message":"161","line":16,"column":13,"nodeType":"162","endLine":16,"endColumn":81},{"ruleId":"160","severity":1,"message":"161","line":22,"column":13,"nodeType":"162","endLine":22,"endColumn":98},{"ruleId":"156","severity":1,"message":"163","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":14},{"ruleId":"156","severity":1,"message":"164","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":21},{"ruleId":"156","severity":1,"message":"165","line":2,"column":23,"nodeType":"158","messageId":"159","endLine":2,"endColumn":29},{"ruleId":"156","severity":1,"message":"166","line":2,"column":31,"nodeType":"158","messageId":"159","endLine":2,"endColumn":39},{"ruleId":"160","severity":1,"message":"161","line":75,"column":11,"nodeType":"162","endLine":75,"endColumn":15},{"ruleId":"160","severity":1,"message":"161","line":76,"column":11,"nodeType":"162","endLine":76,"endColumn":15},{"ruleId":"167","severity":2,"message":"168","line":6,"column":31,"nodeType":"158","endLine":6,"endColumn":42},{"ruleId":"156","severity":1,"message":"169","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"170","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":21},{"ruleId":"156","severity":1,"message":"171","line":5,"column":60,"nodeType":"158","messageId":"159","endLine":5,"endColumn":64},{"ruleId":"156","severity":1,"message":"172","line":8,"column":10,"nodeType":"158","messageId":"159","endLine":8,"endColumn":16},{"ruleId":"156","severity":1,"message":"173","line":12,"column":10,"nodeType":"158","messageId":"159","endLine":12,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":27,"column":8,"nodeType":"176","endLine":27,"endColumn":10,"suggestions":"177"},{"ruleId":"156","severity":1,"message":"178","line":42,"column":11,"nodeType":"158","messageId":"159","endLine":42,"endColumn":19},{"ruleId":"156","severity":1,"message":"179","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":17},{"ruleId":"156","severity":1,"message":"180","line":1,"column":19,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"181","line":16,"column":10,"nodeType":"158","messageId":"159","endLine":16,"endColumn":15},{"ruleId":"156","severity":1,"message":"182","line":3,"column":39,"nodeType":"158","messageId":"159","endLine":3,"endColumn":43},{"ruleId":"156","severity":1,"message":"183","line":3,"column":54,"nodeType":"158","messageId":"159","endLine":3,"endColumn":63},{"ruleId":"156","severity":1,"message":"184","line":5,"column":10,"nodeType":"158","messageId":"159","endLine":5,"endColumn":13},{"ruleId":"156","severity":1,"message":"185","line":5,"column":35,"nodeType":"158","messageId":"159","endLine":5,"endColumn":40},{"ruleId":"156","severity":1,"message":"181","line":9,"column":10,"nodeType":"158","messageId":"159","endLine":9,"endColumn":15},{"ruleId":"156","severity":1,"message":"186","line":11,"column":10,"nodeType":"158","messageId":"159","endLine":11,"endColumn":35},{"ruleId":"156","severity":1,"message":"187","line":19,"column":13,"nodeType":"158","messageId":"159","endLine":19,"endColumn":17},{"ruleId":"174","severity":1,"message":"188","line":25,"column":8,"nodeType":"176","endLine":25,"endColumn":10,"suggestions":"189"},{"ruleId":"156","severity":1,"message":"190","line":53,"column":11,"nodeType":"158","messageId":"159","endLine":53,"endColumn":20},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'EventsDashboard' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Form' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useSelector\" is called in function \"dashboard\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'Flag' is defined but never used.","'fadeIn' is defined but never used.","'getAllEventTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createdEvents' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["193"],"'fakeData' is assigned a value but never used.","'Divider' is defined but never used.","'Tooltip' is defined but never used.","'toast' is defined but never used.","'Menu' is defined but never used.","'IconGroup' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["194"],"'loadEType' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [createdEvents, dispatch]",{"range":"199","text":"200"},"Update the dependencies array to be: [dispatch]",{"range":"201","text":"202"},[976,978],"[createdEvents, dispatch]",[966,968],"[dispatch]"]