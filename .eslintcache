[{"/Users/anascheriet/Documents/Projects/React/events_web_app/src/index.js":"1","/Users/anascheriet/Documents/Projects/React/events_web_app/src/App.js":"2","/Users/anascheriet/Documents/Projects/React/events_web_app/src/reportWebVitals.js":"3","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Sidebar.js":"4","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/SideBar.js":"5","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/NavBar.js":"6","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Navbar.js":"7","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Content.js":"8","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/rootReducer.js":"9","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/userReducer.js":"10","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/api.js":"11","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/login.js":"12","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Login.js":"13","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Exemple.js":"14","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/logoutAction.js":"15","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadUserInfo.js":"16","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loginAction.js":"17","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventTypeReducer.js":"18","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/getTypesAction.js":"19","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/eventTypeCUD.js":"20","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/animations.js":"21","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/CountryCityDATA.js":"22","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/eventAction.js":"23","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/Notifications.js":"24","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/loadEventAction.js":"25","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventReducer.js":"26","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventsDashboard.js":"27","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventEditForm.js":"28","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventForm.js":"29","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventTypes.js":"30","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/ClientReducer.js":"31","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/clientActions/getAllEventsAction.js":"32","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventsHome.js":"33","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/Event.js":"34","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/util.js":"35","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventDetail.js":"36","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/Dashboard.js":"37","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/Redirect.js":"38","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/ClientContent.js":"39","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/ResetPassword.js":"40"},{"size":1733,"mtime":1611419902885,"results":"41","hashOfConfig":"42"},{"size":2826,"mtime":1611948827349,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":1610046698593,"results":"44","hashOfConfig":"42"},{"size":957,"mtime":1611770119258,"results":"45","hashOfConfig":"42"},{"size":967,"mtime":1610059435350,"results":"46","hashOfConfig":"42"},{"size":484,"mtime":1610059441419,"results":"47","hashOfConfig":"42"},{"size":2109,"mtime":1611932905987,"results":"48","hashOfConfig":"42"},{"size":283,"mtime":1611756426217,"results":"49","hashOfConfig":"42"},{"size":432,"mtime":1611230950749,"results":"50","hashOfConfig":"42"},{"size":886,"mtime":1611832923159,"results":"51","hashOfConfig":"42"},{"size":2432,"mtime":1611935809714,"results":"52","hashOfConfig":"42"},{"size":191,"mtime":1610225178281,"results":"53","hashOfConfig":"42"},{"size":5054,"mtime":1611937919170,"results":"54","hashOfConfig":"42"},{"size":3120,"mtime":1610492708884,"results":"55","hashOfConfig":"42"},{"size":230,"mtime":1611425673266,"results":"56","hashOfConfig":"42"},{"size":361,"mtime":1611926351825,"results":"57","hashOfConfig":"42"},{"size":412,"mtime":1611856730779,"results":"58","hashOfConfig":"42"},{"size":341,"mtime":1611161273030,"results":"59","hashOfConfig":"42"},{"size":307,"mtime":1611319663689,"results":"60","hashOfConfig":"42"},{"size":201,"mtime":1610652907595,"results":"61","hashOfConfig":"42"},{"size":553,"mtime":1611257977076,"results":"62","hashOfConfig":"42"},{"size":1032381,"mtime":1610998461066,"results":"63","hashOfConfig":"42"},{"size":173,"mtime":1611161749133,"results":"64","hashOfConfig":"42"},{"size":597,"mtime":1611179050768,"results":"65","hashOfConfig":"42"},{"size":479,"mtime":1611164041248,"results":"66","hashOfConfig":"42"},{"size":496,"mtime":1611186851562,"results":"67","hashOfConfig":"42"},{"size":5276,"mtime":1611756750473,"results":"68","hashOfConfig":"42"},{"size":7434,"mtime":1611428497517,"results":"69","hashOfConfig":"42"},{"size":8061,"mtime":1611390803736,"results":"70","hashOfConfig":"42"},{"size":6774,"mtime":1611428193841,"results":"71","hashOfConfig":"42"},{"size":304,"mtime":1611231455512,"results":"72","hashOfConfig":"42"},{"size":304,"mtime":1611231451894,"results":"73","hashOfConfig":"42"},{"size":1425,"mtime":1611781930225,"results":"74","hashOfConfig":"42"},{"size":1499,"mtime":1611781924143,"results":"75","hashOfConfig":"42"},{"size":697,"mtime":1611756831358,"results":"76","hashOfConfig":"42"},{"size":6365,"mtime":1611844519476,"results":"77","hashOfConfig":"42"},{"size":13096,"mtime":1611676986331,"results":"78","hashOfConfig":"42"},{"size":657,"mtime":1611857092365,"results":"79","hashOfConfig":"42"},{"size":292,"mtime":1611756405527,"results":"80","hashOfConfig":"42"},{"size":2755,"mtime":1611938007254,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"12qyaxg",{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"/Users/anascheriet/Documents/Projects/React/events_web_app/src/index.js",[],["172","173"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/App.js",["174"],"import React, { Fragment, useState } from \"react\";\nimport \"simplebar\"; // or \"import SimpleBar from 'simplebar';\" if you want to use it manually.\nimport \"simplebar/dist/simplebar.css\";\nimport Navbar from \"./Layout/Navbar\";\nimport Sidebar from \"./Layout/Sidebar\";\nimport Content from \"./Layout/Content\";\nimport ClientContent from \"./Layout/ClientContent\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./layout.scss\";\nimport \"./styles.scss\";\nimport { EventsDashboard } from \"./Components/events/Admin/EventsDashboard\"\nimport { useSelector } from \"react-redux\";\nimport { Login } from \"./Components/auth/Login\";\nimport { ToastContainer } from \"react-toastify\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { EventTypes } from \"./Components/events/Admin/EventTypes\";\nimport { EventsHome } from \"./Components/events/Client/EventsHome\"\nimport { Dashboard } from \"./Components/events/Admin/Dashboard\";\nimport { Redirect } from \"./Components/Redirect\";\nimport { ResetPassword } from \"./Components/auth/ResetPassword\";\n\nfunction App() {\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const toggle = () => setToggleBtn(val => !val);\n\n  const { token, user } = useSelector(state => state.userState);\n\n  const isAdmin = user?.role?.name !== \"Client\";\n\n  return (\n    <div >\n      <Router>\n        <ToastContainer />\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/authentication/reset\" component={ResetPassword} />\n        <Route exact path={[\"/Guest\", \"/Guest/:id\"]} component={EventsHome} />\n        <Route path={'/(.+)'}\n          render={() => (\n            <Fragment>\n              <Navbar setToggle={toggle} />\n              <Route exact path=\"/Redirect\" component={Redirect} />\n              {isAdmin && user !== null ? <>\n                <Sidebar toggleBtn={toggleBtn} />\n                <Content toggleBtn={toggleBtn}>\n                  <Switch>\n                    <Route exact path=\"/Home\" component={Dashboard} />\n                    <Route exact path=\"/Events\" component={EventsDashboard} />\n                    <Route exact path=\"/EventTypes\" component={EventTypes} />\n                  </Switch>\n                </Content></>\n                :\n                user !== null &&\n                <div >\n                  <div style={{ marginTop: \"5rem\", marginLeft: \"2rem\" }}>\n                    <ClientContent>\n                      <Switch>\n                        <Route exact path=\"/Home\" component={EventsHome} />\n                        <Route exact path={[\"/Home\", \"/Home/:id\"]} component={EventsHome} />\n                      </Switch>\n                    </ClientContent>\n\n                  </div>\n                </div>\n              }\n            </Fragment>\n\n\n          )} />\n\n      </Router>\n\n    </div >\n  );\n}\n\nexport default App;","/Users/anascheriet/Documents/Projects/React/events_web_app/src/reportWebVitals.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Sidebar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/SideBar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/NavBar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Navbar.js",["175","176","177","178","179"],"import React, { useEffect } from \"react\";\nimport { Menu, Dropdown } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutAction } from \"../redux/actions/Users/logoutAction\"\nimport { Link, useHistory } from \"react-router-dom\";\nimport { loadUserInfo } from \"../redux/actions/Users/loadUserInfo\";\nimport { Line } from \"react-chartjs-2\";\nconst Navbar = ({ setToggle }) => {\n\n  const dispatch = useDispatch();\n\n  const { token, user } = useSelector(state => state.userState);\n\n  const history = useHistory();\n\n\n  const isAdmin = token !== null && user?.role?.name !== \"Client\";\n\n\n\n  const logOut = () => {\n    dispatch(logoutAction());\n    history.push(\"/\");\n  }\n\n  const menu = (\n    <Menu style={{ backgroundColor: \"#14213d\" }}>\n      <Menu.Item >\n        <a target=\"_blank\" className=\"menuLink\" style={{ color: \"#fdde6c\" }} >\n          <i className=\"fas fa-user\" style={{ marginRight: \"1rem\" }} />\n              Profile\n            </a>\n      </Menu.Item>\n      <Menu.Item >\n        <a onClick={logOut} className=\"menuLink\" target=\"_blank\" style={{ color: \"#fdde6c\" }} >\n          <i className=\"fas fa-sign-out-alt\" style={{ marginRight: \"1rem\" }} />\n              Log out\n            </a>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"brand\">\n        {isAdmin && <div className=\"hamburger\" onClick={setToggle}>\n          <div />\n          <div />\n          <div />\n        </div>}\n\n        <div className=\"logo\">\n          <a style={{ color: \"#fdde6c\", textTransform: \"lowercase\", paddingLeft: \"2rem\", fontSize: \"25px\" }} href=\"#!\">eventor</a>\n        </div>\n      </div>\n\n      {user !== null &&\n        <Dropdown overlay={menu}>\n          <div className=\"left\">\n            <i style={{ color: \"#fdde6c\" }} className=\"fas fa-chevron-down\" />\n          </div>\n        </Dropdown>}\n\n      {user === null &&\n        <Link to=\"/\">\n          <div className=\"left\">\n            <i style={{ color: \"#fdde6c\" }} className=\"fas fa-arrow-right\"></i>\n          </div>\n        </Link>\n      }\n    </div>\n  );\n};\n\n\nexport default Navbar;\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Content.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/rootReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/userReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/api.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/login.js",["180","181","182","183"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Login.js",["184","185","186","187","188"],"import { motion } from 'framer-motion';\nimport React, { useState } from 'react'\nimport \"./login.scss\"\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../redux/actions/Users/loginAction';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Icon } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { forgotPasswordUrl } from '../../redux/api';\nimport { successToast } from '../../common/Notifications';\nimport { toast } from 'react-toastify';\n\nexport const Login = () => {\n\n  //Check if user is logged in\n  const { user, token, isLoggedIn } = useSelector(state => state.userState);\n\n\n  //need a dispatcher that executes the action !!!!!!!!!!:D\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const initialValues = {\n    username: '',\n    password: ''\n  }\n\n  const ValidationSchema = new Yup.ObjectSchema({\n    username: Yup.string().email().required(),\n    password: Yup.string().required()\n    /* password: Yup.string().matches(\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$\") */\n  })\n\n  const submitHandler = (values) => {\n    dispatch(login(values, history));\n  }\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: ValidationSchema,\n    onSubmit: submitHandler\n  })\n\n  //Forgot Password \n\n  //Set up conditional rendering\n\n  const [forgotForm, setForgotForm] = useState(false);\n\n  const openForgotPass = () => {\n    setForgotForm(true);\n  }\n\n  const closeForgotPass = () => {\n    setForgotForm(false);\n  }\n\n  //Set up forgot password from\n  const forgotInitialValues = {\n    username: '',\n  }\n\n  const forgotValidationSchema = new Yup.ObjectSchema({\n    username: Yup.string().email().required(),\n  })\n\n\n\n  const forgotSubmitHandler = async (values) => {\n    try {\n      const resp = await axios.post(forgotPasswordUrl, values);\n      successToast(resp.data);\n      closeForgotPass();\n      forgotFormik.values.username = '';\n    } catch (error) {\n      toast.error(error.data);\n    }\n  }\n\n  const forgotFormik = useFormik({\n    initialValues: forgotInitialValues,\n    validationSchema: forgotValidationSchema,\n    onSubmit: forgotSubmitHandler\n  })\n\n  return (\n    <div className=\"all\">\n      <motion.div\n        className=\"logo-container\"\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ ease: \"backOut\", duration: 1 }}>\n        <div className=\"name\">\n          <h2>eventor</h2>\n        </div>\n        <div className=\"description\">\n          <h2>EVENT PLANNING.</h2>\n          {user === null && forgotForm === false &&\n            <Link to=\"/Guest\" >\n              <button className=\"explore\">Explore Events &nbsp;<Icon size=\"large\" name=\"arrow alternate circle right\" /></button>\n            </Link>}\n        </div>\n      </motion.div>\n\n      {user === null ?\n        (\n          forgotForm ?\n            <div className=\"form\">\n              <form onSubmit={forgotFormik.handleSubmit}>\n                <label className=\"label\">Please Enter Your Email</label>\n                <br />\n                <input type=\"text\" name=\"username\" className=\"input\" {...forgotFormik.getFieldProps(\"username\")} />\n                <br />\n                {forgotFormik.touched.username && forgotFormik.errors.username &&\n                  <span style={{ color: \"red\" }}>{forgotFormik.errors.username}</span>}\n                <br />\n                <button type=\"submit\" className=\"submitBtn\" >Confirm</button>\n              </form>\n              <div className=\"links\">\n                <a onClick={closeForgotPass}>Cancel</a>\n              </div>\n\n            </div>\n\n            :\n            <div className=\"form\">\n              <form onSubmit={formik.handleSubmit}>\n                <label className=\"label\">EMAIL</label>\n                <br />\n                <input type=\"text\" name=\"username\" className=\"input\" {...formik.getFieldProps(\"username\")} />\n                <br />\n                {formik.touched.username && formik.errors.username &&\n                  <span style={{ color: \"red\" }}>{formik.errors.username}</span>}\n                <br />\n                <label className=\"label\">PASSWORD</label>\n                <br />\n                <input type=\"password\" name=\"password\" className=\"input\" {...formik.getFieldProps(\"password\")} />\n                <br />\n                {formik.touched.password && formik.errors.password &&\n                  <span style={{ color: \"red\" }}>{formik.errors.password}</span>}\n                <br />\n\n                <button type=\"submit\" className=\"submitBtn\" >Log In</button>\n\n              </form>\n              <div className=\"links\">\n                <a >Create Account</a>\n                <a onClick={openForgotPass}>Forgot Password?</a>\n              </div>\n            </div>) :\n        <div className=\"back\">\n          <h2>{`Welcome Back ${user.displayName} !`}</h2>\n          <Link to=\"/Redirect\">\n            <button>Get Back In</button>\n          </Link>\n        </div>}\n\n\n\n    </div>\n  );\n\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Exemple.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/logoutAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadUserInfo.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loginAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventTypeReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/getTypesAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/eventTypeCUD.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/animations.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/CountryCityDATA.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/eventAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/Notifications.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/loadEventAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventsDashboard.js",["189","190","191","192","193"],"import React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Button, ButtonGroup, Card, Header, Icon, Divider } from 'semantic-ui-react'\nimport { Drawer } from 'antd';\nimport \"./eventsDashboard.scss\"\nimport { popup } from '../../../common/animations';\nimport { EventForm } from './EventForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadUserInfo } from '../../../redux/actions/Users/loadUserInfo';\nimport { EventEditForm } from './EventEditForm';\nimport { getAllEventTypes } from '../../../redux/actions/eventTypes/getTypesAction';\nimport { loadEventAction, unMountDrawer } from '../../../redux/actions/eventActions/loadEventAction';\nimport { formatDate, formatImageLink } from '../../../common/util';\n\nexport const EventsDashboard = () => {\n\n    //set up the dispatcher for actions (api calls)\n    const dispatch = useDispatch();\n\n    //get user Info on component load \n    useEffect(() => {\n        console.log(\"here\");\n        dispatch(loadUserInfo());\n        dispatch(getAllEventTypes());\n    }, [dispatch]);\n\n    //Getting the state\n    const { createdEvents } = useSelector(state => state.userState);\n\n    const { drawer } = useSelector(state => state.eventState);\n\n    //setUp Drawer for Create/Edit event form\n    const [visibleDrawer, setVisibleDrawer] = useState(false);\n\n    const showDrawer = () => {\n        setVisibleDrawer(true);\n    };\n    const closeDrawer = () => {\n        setVisibleDrawer(false);\n    };\n\n    //Set up conditional rendering of edit event form\n    const [editDrawer, setEditDrawer] = useState(false);\n\n    const showEDrawer = () => {\n        setEditDrawer(true);\n    };\n\n    const closeEDrawer = () => {\n        setEditDrawer(false);\n        dispatch(unMountDrawer());\n    };\n\n    const openEditEventForm = async (id) => {\n        showEDrawer();\n        dispatch(loadEventAction(id));\n    }\n\n    return (\n        <div>\n            <div className=\"header\">\n                <Header as='h2'>\n                    <Icon name='calendar' />\n                    <Header.Content>\n                        Events List\n      <Header.Subheader>Manage your events</Header.Subheader>\n                    </Header.Content>\n                </Header>\n                <Button onClick={showDrawer} color=\"green\"><Icon name=\"calendar\" /> Create new Event</Button>\n            </div>\n\n            <Divider />\n\n            {/* List of Events */}\n            <div className=\"container my-12 mx-auto px-4 md:px-12\" style={{ backgroundImage: \"\" }}>\n                <div className=\"flex flex-wrap -mx-1 lg:-mx-4\">\n                    {createdEvents.map((item) => {\n\n                        {/* Column_Start */ }\n                        return (\n                            <motion.div className=\"my-1 px-1 w-full md:w-1/2 lg:my-4 lg:px-4 lg:w-1/3\" variants={popup} initial=\"hidden\" animate=\"show\">\n                                {/* Article Start */}\n                                <article className=\"overflow-hidden rounded-lg shadow-lg\">\n                                    <img alt=\"Placeholder\" className=\"block h-auto w-full\" src={formatImageLink(item.imagePath)} style={{ width: \"400px\", height: \"200px\" }} />\n\n                                    <header className=\"flex items-center justify-between leading-tight p-2 md:p-4\">\n                                        <h1 className=\"text-lg\">\n                                            <p className=\"text-lg text-gray-800\">{item.eventName}</p>\n                                            <p className=\"text-lg text-gray-800\">${item.ticketPrice}</p>\n                                        </h1>\n                                        {formatDate(item.eventDate)}\n                                    </header>\n                                    <p className=\"ml-3 mr-3 mb-4 text-grey-dark text-sm\"> {item.description.substring(1, 160)}...</p>\n                                    <footer className=\"flex items-center justify-center leading-tight p-3 md:p-5\">\n                                        <button onClick={() => openEditEventForm(item.id)} className=\"bg-white text-blue-700 font-bold py-2 px-4\">Edit</button>&nbsp;\n          <button className=\"bg-white text-red-700 font-bold py-2 px-4\">Delete</button>\n                                    </footer>\n\n                                </article>\n                            </motion.div>)\n                        {/* Column End */ }\n                    })}\n                </div>\n            </div>\n\n            {/* Create form Drawer  */}\n            <Drawer\n                width={400}\n                placement=\"right\"\n                closable={false}\n                onClose={closeDrawer}\n                visible={visibleDrawer}\n            >\n                <EventForm\n                    closeDrawer={closeDrawer}\n                />\n            </Drawer>\n\n            {/* Edit form Drawer  */}\n            {drawer &&\n                <Drawer\n                    width={400}\n                    placement=\"right\"\n                    closable={false}\n                    onClose={closeEDrawer}\n                    visible={editDrawer}\n                >\n                    <EventEditForm closeEDrawer={closeEDrawer} />\n                </Drawer>\n            }\n        </div>\n\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventEditForm.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventForm.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventTypes.js",["194"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Header, Icon, Table, Divider } from 'semantic-ui-react'\nimport { Tag, Modal, Form, Input } from 'antd';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport axios from 'axios';\nimport { eventTypesUrls } from '../../../redux/api'\nimport { editToast, successToast } from '../../../common/Notifications';\nimport { getAllEventTypes } from '../../../redux/actions/eventTypes/getTypesAction';\nimport { createEventTypeAction } from '../../../redux/actions/eventTypes/eventTypeCUD'\n\nexport const EventTypes = () => {\n\n    const dispatch = useDispatch();\n    const { eventTypes } = useSelector(state => state.eventTypesState);\n    useEffect(() => {\n        dispatch(getAllEventTypes());\n    }, []);\n\n\n\n    const [editMode, setEditMode] = useState(false);\n\n    //Add event type modal\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const openModalforAdd = () => {\n        setEditMode(false);\n        setIsModalVisible(true);\n        formik.values.name = \"\";\n        formik.values.id = 0;\n    };\n\n\n\n    const openModalforEdit = async (id) => {\n        const eventT = await axios.get(eventTypesUrls.details(id));\n        formik.values.name = eventT.data.name;\n        formik.values.id = eventT.data.id;\n        setEditMode(true);\n        setIsModalVisible(true);\n    };\n\n    //Edit Submit Handler\n    const editHandler = async () => {\n        await axios.put(eventTypesUrls.edit(formik.values.id), formik.values);\n        setIsModalVisible(false);\n        editToast(\"Event Type updated ! ✅\");\n    }\n\n\n    const closeModal = () => {\n        setIsModalVisible(false);\n    };\n\n    //Delete Modal\n    const [isDModalVisible, setIsDModalVisible] = useState(false);\n    const openDModal = () => {\n        setIsDModalVisible(true);\n    };\n\n    const closeDModal = () => {\n        setIsDModalVisible(false);\n    };\n\n    //Load event Type\n    const [getEvType, setGetEvType] = useState({})\n\n    const loadEType = async (id) => {\n        const eventT = await axios.get(eventTypesUrls.details(id));\n        setGetEvType({ ...getEvType, ...eventT.data });\n        console.log(getEvType);\n        openDModal();\n    }\n\n    const deleteETypeHandle = async (id) => {\n        await axios.delete(eventTypesUrls.delete(id)).catch(err => console.log(err));\n        eventTypes.filter(x => x.id !== id);\n        eventTypes.splice(eventTypes.findIndex(x => x.id === id), 1);\n        editToast(\"Event Type has been deleted ! 👍\");\n        closeDModal();\n    }\n\n\n\n    //Form handling \n\n    //Initial Values\n    const myInitialValues = { name: '' };\n\n    //Validation\n    const myValidationSchema = new Yup.object({\n        name: Yup.string().required(),\n    })\n\n    //Form handler\n    const formik = useFormik({\n        validationSchema: myValidationSchema,\n        initialValues: myInitialValues\n    })\n\n    //Create Submit eType handler\n    const submitHandler = (eType) => {\n        eType.id = eventTypes[eventTypes.length - 1].id + 1;\n        dispatch(createEventTypeAction(eType));\n        eventTypes.push(eType);\n        setIsModalVisible(false);\n        successToast(\"Event Type has been Added ! 👌\");\n    }\n\n\n    return (\n        <div>\n            <div className=\"header\">\n                <Header as='h2'>\n                    <Icon style={{ marginTop: \"0.7rem\" }} name='list' />\n                    <Header.Content>\n                        Event Types List\n                        <Header.Subheader>Manage event categories</Header.Subheader>\n                    </Header.Content>\n                </Header>\n                <Button onClick={openModalforAdd} color=\"green\"><Icon name=\"calendar plus\" /> Create new Event Type</Button>\n            </div>\n            <Divider />\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Category Id</Table.HeaderCell>\n                        <Table.HeaderCell>Category Name</Table.HeaderCell>\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {eventTypes?.map(item => {\n                        return <Table.Row key={item.id}>\n                            <Table.Cell>{item.id}</Table.Cell>\n                            <Table.Cell>{item.name}</Table.Cell>\n                            <Table.Cell>\n                                <Icon onClick={() => openModalforEdit(item.id)} name=\"edit\" title=\"Edit\" color=\"blue\" size=\"large\" />\n                                &nbsp;&nbsp;\n                                <Icon onClick={() => loadEType(item.id)} style={{ cursor: 'pointer' }} size=\"large\" title=\"Delete\" name=\"trash\" color=\"red\" /></Table.Cell>\n                        </Table.Row>\n                    })}\n                </Table.Body>\n            </Table>\n\n\n            {/* Add Event type modal  */}\n            <Modal title={editMode ? \"Update Event\" : \"Add an Event Type\"}\n                visible={isModalVisible}\n                onCancel={closeModal}\n                footer={[\n                    <Button onClick={closeModal}>\n                        Cancel\n                </Button>,\n                    <Button\n                        disabled={Object.keys(formik.errors).length !== 0}\n                        onClick={() => editMode ? editHandler() : submitHandler(formik.values)}\n                        color={editMode ? \"blue\" : \"green\"}>\n                        {editMode ? \"Update\" : \"Create\"}\n                    </Button>,\n                ]}>\n                <Form layout=\"vertical\">\n                    <Form.Item\n                        label=\"Type Name\">\n                        <Input name='name' {...formik.getFieldProps('name')} />\n                        {formik.touched.name && formik.errors.name && <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.name}</pre>}\n                    </Form.Item>\n                </Form>\n            </Modal>\n\n\n            {/* Delete evType Modal */}\n            <Modal title='Delete Event Type'\n                visible={isDModalVisible}\n                onCancel={closeDModal}\n                footer={[\n                    <Button onClick={closeDModal}>\n                        Cancel\n                </Button>,\n                    <Button\n                        onClick={() => deleteETypeHandle(getEvType.id)}\n                        color=\"red\">\n                        Delete\n                </Button>,\n                ]}>\n                <h3>Are you sure you want to delete Event Type: <Tag style={{ fontSize: \"20px\" }} color=\"red\">{getEvType.name}</Tag></h3>\n            </Modal>\n\n        </div>\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/ClientReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/clientActions/getAllEventsAction.js",[],["195","196"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventsHome.js",["197","198","199"],"import { motion, AnimatePresence, AnimateSharedLayout } from 'framer-motion';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { loadUserInfo } from '../../../redux/actions/Users/loadUserInfo';\nimport { Event } from \"./Event\"\nimport { EventDetail } from './EventDetail';\nimport \"./EventHome.scss\"\nexport const EventsHome = () => {\n\n    //get current location\n    const location = useLocation();\n    const pathId = location.pathname.split(\"/\")[2];\n\n    //get events from the state\n    const { availableEvents } = useSelector(state => state.clientState);\n\n\n    return (\n        <motion.div className=\"eventList\">\n            <AnimateSharedLayout type=\"switch\">\n                {/* wrap all the components that will be transitioning*/}\n                <AnimatePresence>\n                    {/* The component that will be animated should have a conditional toggle, pathId here */}\n                    {pathId && <EventDetail pathId={pathId} />}\n                </AnimatePresence>\n                <h2>Available events</h2>\n                <motion.div className=\"events\" >\n                    {availableEvents.map((event) => {\n                        return <Event key={event.event.id} event={event.event} />\n                    })}\n                </motion.div>\n            </AnimateSharedLayout>\n        </motion.div>\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/Event.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/util.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventDetail.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/Dashboard.js",["200"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Bar, HorizontalBar, Line, Pie, Polar } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport { Divider, Header, Icon } from 'semantic-ui-react';\nimport { byBookingMonthUrl, byClientAgeUrl, byClientNationalityUrl, byEventTypeUrl, incomeUrl } from '../../../redux/api';\n\nexport const Dashboard = () => {\n\n\n  const [incomeData, setIncomeData] = useState({});\n  const [clientAgeData, setClientAgeData] = useState({});\n  const [clientNationalityData, setClientNationalityData] = useState({});\n  const [bookingMonthData, setBookingtMonthData] = useState({});\n  const [bookingEventTypeData, setBookingtEventTypeData] = useState({});\n\n\n  const { user } = useSelector(state => state.userState);\n\n  useEffect(() => {\n    console.log(user);\n\n    const getBookingEventTypeData = async () => {\n      const resp = await axios.get(byEventTypeUrl);\n      setBookingtEventTypeData(resp?.data);\n    }\n\n    const getBookingMonthData = async () => {\n      const resp = await axios.get(byBookingMonthUrl);\n      setBookingtMonthData(resp?.data);\n    }\n\n    const getClientNationalityData = async () => {\n      const resp = await axios.get(byClientNationalityUrl);\n      setClientNationalityData(resp?.data);\n    }\n\n    const getClientAgeData = async () => {\n      const resp = await axios.get(byClientAgeUrl);\n      setClientAgeData(resp?.data);\n    }\n\n    const getIncome = async () => {\n      const response = await axios.get(incomeUrl);\n      setIncomeData(response?.data);\n    }\n\n    if (user?.role?.name !== \"Client\") {\n\n      getBookingEventTypeData();\n      getBookingMonthData();\n      getClientAgeData();\n      getIncome();\n      getClientNationalityData();\n    }\n\n\n  }, [])\n\n\n  const weekData = {\n    labels: incomeData.weekAvg > 0 ? [2, 3, 2, 8, 7, 8, 15] : [15, 13, 7, 12, 7, 8, 4],\n    datasets: [\n      {\n        backgroundColor: \"rgba(101, 116, 205, 0.1)\",\n        borderColor: \"rgba(101, 116, 205, 0.8)\",\n        borderWidth: 2,\n        data: incomeData.weekAvg > 0 ? [2, 3, 2, 8, 7, 8, 15] : [15, 13, 7, 10, 7, 8, 4],\n      },\n    ],\n  };\n\n  const monthData = {\n    labels: incomeData.monthAvg > 0 ? [2, 3, 2, 8, 7, 9, 15] : [15, 9, 7, 8, 2, 3, 2],\n    datasets: [\n      {\n        backgroundColor: \"rgba(246, 153, 63, 0.1)\",\n        borderColor: \"rgba(246, 153, 63, 0.8)\",\n        borderWidth: 2,\n        data: incomeData.monthAvg > 0 ? [2, 3, 2, 8, 7, 9, 15] : [15, 9, 7, 8, 2, 3, 2],\n      },\n    ],\n  };\n\n  const totalData = {\n    labels: incomeData.totalAvg > 0 ? [2, 4, 5, 8, 12, 9, 20] : [20, 9, 12, 8, 5, 4, 2],\n    datasets: [\n      {\n        backgroundColor: \"rgba(246, 109, 155, 0.1)\",\n        borderColor: \"rgba(246, 109, 155, 0.8)\",\n        borderWidth: 2,\n        data: incomeData.totalAvg > 0 ? [2, 4, 5, 8, 12, 9, 20] : [20, 9, 12, 8, 5, 4, 2],\n      },\n    ],\n  };\n\n  const chartOptions = {\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    tooltips: {\n      enabled: false,\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n    },\n    scales: {\n      xAxes: [{\n        gridLines: false,\n        scaleLabel: false,\n        ticks: {\n          display: false\n        }\n      }],\n      yAxes: [{\n        gridLines: false,\n        scaleLabel: false,\n        ticks: {\n          display: false,\n          suggestedMin: 0,\n          suggestedMax: 10\n        }\n      }]\n    }\n  };\n\n  const byClientAgeData = {\n    labels: ['18 to 29', '30 to 39', '40 to 65', 'Above 66'],\n    datasets: [\n      {\n        data: [clientAgeData[\"18 to 29\"], clientAgeData[\"30 to 39\"], clientAgeData[\"40 to 65\"], clientAgeData[\"Above 66\"]],\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  }\n\n  const byClientNationalitydata = {\n    labels: Object.keys(clientNationalityData),\n    datasets: [\n      {\n        label: '# of Clients',\n        data: Object.values(clientNationalityData),\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  }\n\n\n  const byBookingMonthData = {\n    labels: Object.keys(bookingMonthData),\n    datasets: [\n      {\n        label: '# of Bookings',\n        data: Object.values(bookingMonthData),\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.5)',\n          'rgba(54, 162, 235, 0.5)',\n          'rgba(255, 206, 86, 0.5)',\n          'rgba(75, 192, 192, 0.5)',\n          'rgba(153, 102, 255, 0.5)',\n          'rgba(255, 159, 64, 0.5)',\n          'rgb(255, 99, 132)',\n          'rgb(54, 162, 235)',\n          'rgb(75, 192, 192)',\n          'rgba(225, 224, 0, 1)',\n          'rgba(135, 10, 24, 0.5)',\n          'rgba(154, 262, 125, 103.5)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  }\n\n\n\n  const byEventTypeData = {\n    labels: Object.keys(bookingEventTypeData),\n    datasets: [\n      {\n        label: \"# of bookings\",\n        data: Object.values(bookingEventTypeData),\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)',\n          'rgba(255, 159, 64, 1)',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  }\n\n  const byEventTypeOptions = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  }\n  return (\n\n    <div>\n      <div className=\"header\">\n        <Header as='h2'>\n          <Icon name='chart line' />\n          <Header.Content>\n            Analytics Dashboard\n      <Header.Subheader>Check Your Events Performance </Header.Subheader>\n          </Header.Content>\n        </Header>\n      </div>\n      <Divider />\n      <div className=\"flex items-center justify-center px-5 py-5\">\n        <div className=\"w-full max-w-8xl\">\n          <div className=\"-mx-2 md:flex\">\n            <div className=\"w-full md:w-1/3 px-5\">\n              <div className=\"rounded-lg shadow-sm mb-4\">\n                <div className=\"rounded-lg bg-white shadow-lg md:shadow-xl relative overflow-hidden\">\n                  <div className=\"px-3 pt-8 pb-10 text-center relative z-10\">\n                    <h4 className=\"text-sm uppercase text-gray-500 leading-tight\">Weekly Income</h4>\n                    <h3 className=\"text-3xl text-gray-700 font-semibold leading-tight my-3\">${incomeData.weekIncome}</h3>\n                    <p className={`text-xs $ text-${incomeData.weekAvg < 0 ? \"red\" : \"green\"}-500 leading-tight`}>{incomeData.weekAvg < 0 ? \"▼ \" : \"▲ \"}{incomeData.weekAvg}%</p>\n                  </div>\n                  <div className=\"absolute bottom-0 inset-x-0\">\n                    <Line data={weekData} options={chartOptions} height={55} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"w-full md:w-1/3 px-2\">\n              <div className=\"rounded-lg shadow-sm mb-4\">\n                <div className=\"rounded-lg bg-white shadow-lg md:shadow-xl relative overflow-hidden\">\n                  <div className=\"px-3 pt-8 pb-10 text-center relative z-10\">\n                    <h4 className=\"text-sm uppercase text-gray-500 leading-tight\">Monthly Income</h4>\n                    <h3 className=\"text-3xl text-gray-700 font-semibold leading-tight my-3\">${incomeData.monthIncome}</h3>\n                    <p className={`text-xs $ text-${incomeData.monthAvg < 0 ? \"red\" : \"green\"}-500 leading-tight`}>{incomeData.monthAvg < 0 ? \"▼ \" : \"▲ \"}{incomeData.monthAvg}%</p>\n                  </div>\n                  <div className=\"absolute bottom-0 inset-x-0\">\n                    <Line data={monthData} options={chartOptions} height={55} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"w-full md:w-1/3 px-2\">\n              <div className=\"rounded-lg shadow-sm mb-4\">\n                <div className=\"rounded-lg bg-white shadow-lg md:shadow-xl relative overflow-hidden\">\n                  <div className=\"px-3 pt-8 pb-10 text-center relative z-10\">\n                    <h4 className=\"text-sm uppercase text-gray-500 leading-tight\">Total Income</h4>\n                    <h3 className=\"text-3xl text-gray-700 font-semibold leading-tight my-3\">${incomeData.totalIncome}</h3>\n                    <p className={`text-xs $ text-${incomeData.totalAvg < 0 ? \"red\" : \"green\"}-500 leading-tight`}>{incomeData.totalAvg < 0 ? \"▼ \" : \"▲ \"}{incomeData.totalAvg}%</p>\n                  </div>\n                  <div className=\"absolute bottom-0 inset-x-0\">\n                    <Line data={totalData} options={chartOptions} height={55} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container my-0 mx-auto px-4 md:px-12\">\n        <div className=\"flex flex-wrap -mx-1 lg:-mx-7\">\n\n\n          <div className=\"my-1 px-1 w-full md:w-1/2 lg:my-6 lg:px-9 lg:w-1/2\">\n\n\n            <article className=\"overflow-hidden rounded-lg shadow-lg\">\n\n\n              <header className=\"flex items-center justify-between leading-tight p-2 md:p-4\">\n\n                <p className=\"text-grey-darker text-lg text-center\">\n                  Bookings Classed by Customer Age\n             </p>\n              </header>\n\n              <Pie data={byClientAgeData} />\n\n\n              <footer className=\"flex items-center justify-between leading-none p-2 md:p-4\">\n              </footer>\n\n            </article>\n\n\n          </div>\n          <div className=\"my-1 px-1 w-full md:w-1/2 lg:my-6 lg:px-9 lg:w-1/2\">\n\n\n            <article className=\"overflow-hidden rounded-lg shadow-lg\">\n\n\n              <header className=\"flex items-center justify-between leading-tight p-2 md:p-4\">\n\n                <p className=\"text-grey-darker text-lg text-center\">\n                  Bookings Classed by Customer Country\n                         </p>\n              </header>\n\n              <Bar data={byClientNationalitydata} />\n\n\n              <footer className=\"flex items-center justify-between leading-none p-2 md:p-4\">\n              </footer>\n\n            </article>\n\n\n          </div>\n\n\n\n\n        </div>\n      </div>\n\n      <div className=\"container my-0 mx-auto px-4 md:px-12\">\n        <div className=\"flex flex-wrap -mx-1 lg:-mx-7\">\n\n\n          <div className=\"my-1 px-1 w-full md:w-1/2 lg:my-6 lg:px-9 lg:w-1/2\">\n\n\n            <article className=\"overflow-hidden rounded-lg shadow-lg\">\n\n\n              <header className=\"flex items-center justify-between leading-tight p-2 md:p-4\">\n\n                <p className=\"text-grey-darker text-lg text-center\">\n                  Bookings Classed by Month\n             </p>\n              </header>\n\n              <Polar data={byBookingMonthData} />\n\n\n              <footer className=\"flex items-center justify-between leading-none p-2 md:p-4\">\n              </footer>\n\n            </article>\n\n\n          </div>\n          <div className=\"my-1 px-1 w-full md:w-1/2 lg:my-6 lg:px-9 lg:w-1/2\">\n\n\n            <article className=\"overflow-hidden rounded-lg shadow-lg\">\n\n\n              <header className=\"flex items-center justify-between leading-tight p-2 md:p-4\">\n\n                <p className=\"text-grey-darker text-lg text-center\">\n                  Bookings Classed by Event Type\n                         </p>\n              </header>\n\n              <HorizontalBar data={byEventTypeData} options={byEventTypeOptions} />\n\n              <footer className=\"flex items-center justify-between leading-none p-2 md:p-4\">\n              </footer>\n\n            </article>\n\n\n          </div>\n\n\n\n\n        </div>\n      </div>\n\n      {/*  <div className=\"container my-12 mx-auto px-4 md:px-12\">\n        <div className=\"flex flex-wrap -mx-1 lg:-mx-4\">\n\n\n        <div className=\"my-1 px-1 w-full md:w-1/2 lg:my-4 lg:px-4 lg:w-1/2\">\n            <h4 className=\"text-sm uppercase text-gray-500 leading-tight\">Clients Grouped By Age</h4>\n            <Pie data={byClientAgeData} style={{ marginBottom: \"2rem\" }} />\n          </div>\n\n        </div>\n\n\n      </div> */}\n\n    </div>\n\n  )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/Redirect.js",["201"],"import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { loadUserInfo } from '../redux/actions/Users/loadUserInfo';\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\n\nexport const Redirect = () => {\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    useEffect(() => {\n        dispatch(loadUserInfo());\n        setTimeout(() => {\n            history.push(\"/Home\");\n        }, 2000);\n    }, [])\n    return (\n        <div>\n            <Dimmer active>\n                <Loader content={\"Loading App...\"} />\n            </Dimmer>\n        </div>\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/ClientContent.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/ResetPassword.js",[],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":26,"column":11,"nodeType":"208","messageId":"209","endLine":26,"endColumn":16},{"ruleId":"206","severity":1,"message":"210","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"211","line":6,"column":10,"nodeType":"208","messageId":"209","endLine":6,"endColumn":22},{"ruleId":"206","severity":1,"message":"212","line":7,"column":10,"nodeType":"208","messageId":"209","endLine":7,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":29,"column":9,"nodeType":"215","endLine":29,"endColumn":79},{"ruleId":"213","severity":1,"message":"214","line":35,"column":9,"nodeType":"215","endLine":35,"endColumn":96},{"ruleId":"206","severity":1,"message":"216","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":14},{"ruleId":"206","severity":1,"message":"217","line":2,"column":16,"nodeType":"208","messageId":"209","endLine":2,"endColumn":21},{"ruleId":"206","severity":1,"message":"218","line":2,"column":23,"nodeType":"208","messageId":"209","endLine":2,"endColumn":29},{"ruleId":"206","severity":1,"message":"219","line":2,"column":31,"nodeType":"208","messageId":"209","endLine":2,"endColumn":39},{"ruleId":"206","severity":1,"message":"207","line":18,"column":17,"nodeType":"208","messageId":"209","endLine":18,"endColumn":22},{"ruleId":"206","severity":1,"message":"220","line":18,"column":24,"nodeType":"208","messageId":"209","endLine":18,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":123,"column":17,"nodeType":"215","endLine":123,"endColumn":46},{"ruleId":"213","severity":1,"message":"214","line":150,"column":17,"nodeType":"215","endLine":150,"endColumn":21},{"ruleId":"213","severity":1,"message":"214","line":151,"column":17,"nodeType":"215","endLine":151,"endColumn":45},{"ruleId":"206","severity":1,"message":"221","line":3,"column":18,"nodeType":"208","messageId":"209","endLine":3,"endColumn":29},{"ruleId":"206","severity":1,"message":"222","line":3,"column":31,"nodeType":"208","messageId":"209","endLine":3,"endColumn":35},{"ruleId":"223","severity":1,"message":"224","line":79,"column":25,"nodeType":"225","messageId":"226","endLine":79,"endColumn":46},{"ruleId":"223","severity":1,"message":"224","line":101,"column":25,"nodeType":"225","messageId":"226","endLine":101,"endColumn":44},{"ruleId":"227","severity":1,"message":"228","line":101,"column":25,"nodeType":"225","messageId":"229","endLine":101,"endColumn":44},{"ruleId":"230","severity":1,"message":"231","line":19,"column":8,"nodeType":"232","endLine":19,"endColumn":10,"suggestions":"233"},{"ruleId":"202","replacedBy":"234"},{"ruleId":"204","replacedBy":"235"},{"ruleId":"206","severity":1,"message":"210","line":2,"column":17,"nodeType":"208","messageId":"209","endLine":2,"endColumn":26},{"ruleId":"206","severity":1,"message":"236","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":21},{"ruleId":"206","severity":1,"message":"211","line":5,"column":10,"nodeType":"208","messageId":"209","endLine":5,"endColumn":22},{"ruleId":"230","severity":1,"message":"237","line":58,"column":6,"nodeType":"232","endLine":58,"endColumn":8,"suggestions":"238"},{"ruleId":"230","severity":1,"message":"239","line":17,"column":8,"nodeType":"232","endLine":17,"endColumn":10,"suggestions":"240"},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'loadUserInfo' is defined but never used.","'Line' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Form' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'Card' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["243"],["241"],["242"],"'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["244"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["245"],"no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [dispatch]",{"range":"252","text":"253"},"Update the dependencies array to be: [user]",{"range":"254","text":"255"},"Update the dependencies array to be: [dispatch, history]",{"range":"256","text":"257"},[826,828],"[dispatch]",[1767,1769],"[user]",[499,501],"[dispatch, history]"]