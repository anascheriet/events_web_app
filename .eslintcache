[{"/Users/anascheriet/Documents/Projects/React/events_web_app/src/index.js":"1","/Users/anascheriet/Documents/Projects/React/events_web_app/src/App.js":"2","/Users/anascheriet/Documents/Projects/React/events_web_app/src/reportWebVitals.js":"3","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Sidebar.js":"4","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/SideBar.js":"5","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/NavBar.js":"6","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Navbar.js":"7","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Content.js":"8","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/rootReducer.js":"9","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/userReducer.js":"10","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/api.js":"11","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/login.js":"12","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Login.js":"13","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Exemple.js":"14","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/logoutAction.js":"15","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadUserInfo.js":"16","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loginAction.js":"17","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventTypeReducer.js":"18","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/getTypesAction.js":"19","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/eventTypeCUD.js":"20","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/animations.js":"21","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/CountryCityDATA.js":"22","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/eventAction.js":"23","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/Notifications.js":"24","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/loadEventAction.js":"25","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventReducer.js":"26","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventsDashboard.js":"27","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventEditForm.js":"28","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventForm.js":"29","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventTypes.js":"30","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/ClientReducer.js":"31","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/clientActions/getAllEventsAction.js":"32","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventsHome.js":"33","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/Event.js":"34","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/util.js":"35","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventDetail.js":"36","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/Dashboard.js":"37","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/Redirect.js":"38","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/ClientContent.js":"39","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/ResetPassword.js":"40","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/AdminList.js":"41","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Register.js":"42","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/ClientBookings.js":"43","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/EditProfile.js":"44","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadCountries.js":"45"},{"size":1733,"mtime":1611419902885,"results":"46","hashOfConfig":"47"},{"size":3333,"mtime":1612941695386,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":1610046698593,"results":"49","hashOfConfig":"47"},{"size":901,"mtime":1613239229630,"results":"50","hashOfConfig":"47"},{"size":967,"mtime":1610059435350,"results":"51","hashOfConfig":"47"},{"size":484,"mtime":1610059441419,"results":"52","hashOfConfig":"47"},{"size":2365,"mtime":1613239908356,"results":"53","hashOfConfig":"47"},{"size":283,"mtime":1611756426217,"results":"54","hashOfConfig":"47"},{"size":432,"mtime":1611230950749,"results":"55","hashOfConfig":"47"},{"size":1049,"mtime":1612943924276,"results":"56","hashOfConfig":"47"},{"size":2741,"mtime":1613499164182,"results":"57","hashOfConfig":"47"},{"size":191,"mtime":1610225178281,"results":"58","hashOfConfig":"47"},{"size":5180,"mtime":1612635017129,"results":"59","hashOfConfig":"47"},{"size":3120,"mtime":1610492708884,"results":"60","hashOfConfig":"47"},{"size":230,"mtime":1611425673266,"results":"61","hashOfConfig":"47"},{"size":359,"mtime":1612635356464,"results":"62","hashOfConfig":"47"},{"size":412,"mtime":1612635025885,"results":"63","hashOfConfig":"47"},{"size":341,"mtime":1611161273030,"results":"64","hashOfConfig":"47"},{"size":307,"mtime":1611319663689,"results":"65","hashOfConfig":"47"},{"size":201,"mtime":1610652907595,"results":"66","hashOfConfig":"47"},{"size":553,"mtime":1611257977076,"results":"67","hashOfConfig":"47"},{"size":1032381,"mtime":1610998461066,"results":"68","hashOfConfig":"47"},{"size":173,"mtime":1611161749133,"results":"69","hashOfConfig":"47"},{"size":875,"mtime":1612635565776,"results":"70","hashOfConfig":"47"},{"size":479,"mtime":1612635208512,"results":"71","hashOfConfig":"47"},{"size":496,"mtime":1611186851562,"results":"72","hashOfConfig":"47"},{"size":5555,"mtime":1613499320389,"results":"73","hashOfConfig":"47"},{"size":7183,"mtime":1613499122652,"results":"74","hashOfConfig":"47"},{"size":7673,"mtime":1613239312313,"results":"75","hashOfConfig":"47"},{"size":6847,"mtime":1613240257182,"results":"76","hashOfConfig":"47"},{"size":304,"mtime":1611231455512,"results":"77","hashOfConfig":"47"},{"size":304,"mtime":1613238572915,"results":"78","hashOfConfig":"47"},{"size":5503,"mtime":1613398039241,"results":"79","hashOfConfig":"47"},{"size":1499,"mtime":1611781924143,"results":"80","hashOfConfig":"47"},{"size":697,"mtime":1611756831358,"results":"81","hashOfConfig":"47"},{"size":6750,"mtime":1613490465330,"results":"82","hashOfConfig":"47"},{"size":13502,"mtime":1613497208546,"results":"83","hashOfConfig":"47"},{"size":779,"mtime":1612944173152,"results":"84","hashOfConfig":"47"},{"size":292,"mtime":1611756405527,"results":"85","hashOfConfig":"47"},{"size":2753,"mtime":1612634983851,"results":"86","hashOfConfig":"47"},{"size":7758,"mtime":1612944420289,"results":"87","hashOfConfig":"47"},{"size":4733,"mtime":1612944480045,"results":"88","hashOfConfig":"47"},{"size":2868,"mtime":1612637177615,"results":"89","hashOfConfig":"47"},{"size":4943,"mtime":1613239305315,"results":"90","hashOfConfig":"47"},{"size":308,"mtime":1612944376386,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"12qyaxg",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/Users/anascheriet/Documents/Projects/React/events_web_app/src/index.js",[],["189","190"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/App.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/reportWebVitals.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Sidebar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/SideBar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/NavBar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Navbar.js",["191","192"],"import React from \"react\";\nimport { Menu, Dropdown } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutAction } from \"../redux/actions/Users/logoutAction\"\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Icon } from \"semantic-ui-react\";\nconst Navbar = ({ setToggle }) => {\n\n  const dispatch = useDispatch();\n\n  const { token, user } = useSelector(state => state.userState);\n\n  const history = useHistory();\n\n\n  const isAdmin = token !== null && user?.role?.name !== \"Client\";\n\n\n\n  const logOut = () => {\n    dispatch(logoutAction());\n    history.push(\"/\");\n  }\n\n  const menu = (\n    <Menu style={{ backgroundColor: \"#14213d\" }}>\n      <Menu.Item >\n        <Link to=\"/EditProfile\">\n          <a target=\"_blank\" className=\"menuLink\" style={{ color: \"#fdde6c\" }} >\n            <Icon name=\"user\" style={{ color: \"#fdde6c\" }} />\n              Profile\n            </a>\n        </Link>\n      </Menu.Item>\n      {user !== null && user.role.name === \"Client\"\n        && <Menu.Item>\n          <Link to=\"/MyBookings\" style={{ color: \"#fdde6c\" }}>\n            <Icon name=\"ticket alternate\" style={{ color: \"#fdde6c\" }} />\n            My Bookings\n          </Link>\n        </Menu.Item>}\n      <Menu.Item >\n        <a onClick={logOut} className=\"menuLink\" target=\"_blank\" style={{ color: \"#fdde6c\" }} >\n          <Icon name=\"sign out\" style={{ color: \"#fdde6c\" }} />\n              Log out\n            </a>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"brand\">\n        {isAdmin && <div className=\"hamburger\" onClick={setToggle}>\n          <div />\n          <div />\n          <div />\n        </div>}\n\n        <div className=\"logo\">\n          <Link to=\"/Home\">\n            <p style={{ color: \"#fdde6c\", textTransform: \"lowercase\", paddingLeft: \"2rem\", fontSize: \"25px\" }} href=\"#!\">eventor</p>\n          </Link>\n\n        </div>\n      </div>\n\n      {user !== null &&\n        <Dropdown overlay={menu}>\n          <div className=\"left\">\n            <Icon name=\"arrow down\" style={{ color: \"#fdde6c\" }} />\n          </div>\n        </Dropdown>}\n\n      {user === null &&\n        <Link to=\"/\">\n          <div className=\"left\">\n            <i style={{ color: \"#fdde6c\" }} className=\"fas fa-arrow-right\" />\n          </div>\n        </Link>\n      }\n    </div>\n  );\n};\n\n\nexport default Navbar;\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Content.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/rootReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/userReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/api.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/login.js",["193","194","195","196"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Login.js",["197","198","199"],"import { motion } from 'framer-motion';\nimport React, { useState } from 'react'\nimport \"./login.scss\"\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../redux/actions/Users/loginAction';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Icon } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { forgotPasswordUrl } from '../../redux/api';\nimport { successToast } from '../../common/Notifications';\nimport { toast } from 'react-toastify';\n\nexport const Login = () => {\n\n  //Check if user is logged in\n  const { user } = useSelector(state => state.userState);\n\n  //need a dispatcher that executes the action !!!!!!!!!!:D\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const initialValues = {\n    username: '',\n    password: ''\n  }\n\n  const ValidationSchema = new Yup.ObjectSchema({\n    username: Yup.string().email().required(),\n    password: Yup.string().required()\n    /* password: Yup.string().matches(\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$\") */\n  })\n\n  const submitHandler = (values) => {\n    dispatch(login(values, history));\n  }\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: ValidationSchema,\n    onSubmit: submitHandler\n  })\n\n  //Forgot Password \n\n  //Set up conditional rendering\n\n  const [forgotForm, setForgotForm] = useState(false);\n\n  const openForgotPass = () => {\n    setForgotForm(true);\n  }\n\n  const closeForgotPass = () => {\n    setForgotForm(false);\n  }\n\n  //Set up forgot password from\n  const forgotInitialValues = {\n    username: '',\n  }\n\n  const forgotValidationSchema = new Yup.ObjectSchema({\n    username: Yup.string().email().required(),\n  })\n\n\n\n  const forgotSubmitHandler = async (values) => {\n    try {\n      const resp = await axios.post(forgotPasswordUrl, values);\n      successToast(resp.data);\n      closeForgotPass();\n      forgotFormik.values.username = '';\n    } catch (error) {\n      toast.error(error.data);\n    }\n  }\n\n  const forgotFormik = useFormik({\n    initialValues: forgotInitialValues,\n    validationSchema: forgotValidationSchema,\n    onSubmit: forgotSubmitHandler\n  })\n\n  return (\n    <div className=\"all\">\n      <motion.div\n        className=\"logo-container\"\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ ease: \"backOut\", duration: 1 }}>\n        <div className=\"name\">\n          <h2>eventor</h2>\n        </div>\n        <div className=\"description\">\n          {forgotForm ? <h2 style={{ fontSize: \"25px\" }}>Forgot Password</h2> : <h2>EVENT PLANNING.</h2>}\n          {user === null && forgotForm === false &&\n            <Link to=\"/Guest\" >\n              <button className=\"explore\">Explore Events &nbsp;<Icon size=\"large\" name=\"arrow alternate circle right\" /></button>\n            </Link>}\n        </div>\n      </motion.div>\n\n      {user === null ?\n        (\n          forgotForm ?\n            <div className=\"form\">\n              <form onSubmit={forgotFormik.handleSubmit}>\n                <label className=\"label\">Please Enter Your Email</label>\n                <br />\n                <input type=\"text\" name=\"username\" className=\"input\" {...forgotFormik.getFieldProps(\"username\")} />\n                <br />\n                {forgotFormik.touched.username && forgotFormik.errors.username &&\n                  <span style={{ color: \"red\" }}>{forgotFormik.errors.username}</span>}\n                <br />\n                <button type=\"submit\" className=\"submitBtn\" >Confirm</button>\n              </form>\n              <div className=\"links\">\n                <a onClick={closeForgotPass}>Cancel</a>\n              </div>\n\n            </div>\n\n            :\n            <div className=\"form\">\n              <form onSubmit={formik.handleSubmit}>\n                <label className=\"label\">EMAIL</label>\n                <br />\n                <input type=\"text\" name=\"username\" className=\"input\" {...formik.getFieldProps(\"username\")} />\n                <br />\n                {formik.touched.username && formik.errors.username &&\n                  <span style={{ color: \"red\" }}>{formik.errors.username}</span>}\n                <br />\n                <label className=\"label\">PASSWORD</label>\n                <br />\n                <input type=\"password\" name=\"password\" className=\"input\" {...formik.getFieldProps(\"password\")} />\n                <br />\n                {formik.touched.password && formik.errors.password &&\n                  <span style={{ color: \"red\" }}>{formik.errors.password}</span>}\n                <br />\n\n                <button type=\"submit\" className=\"submitBtn\" >Log In</button>\n\n              </form>\n              <div className=\"links\">\n                <Link to=\"/authentication/register\">\n                  <a>Create Account</a>\n                </Link>\n                <a onClick={openForgotPass}>Forgot Password?</a>\n              </div>\n            </div>) :\n        <div className=\"back\">\n          <h2>{`Welcome Back ${user.displayName} !`}</h2>\n          <Link to=\"/Redirect\">\n            <button>Get Back In</button>\n          </Link>\n        </div>}\n\n\n\n    </div>\n  );\n\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Exemple.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/logoutAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadUserInfo.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loginAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventTypeReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/getTypesAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/eventTypeCUD.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/animations.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/CountryCityDATA.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/eventAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/Notifications.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/loadEventAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventsDashboard.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventEditForm.js",["200"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventForm.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventTypes.js",["201"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Header, Icon, Table, Divider } from 'semantic-ui-react'\nimport { Tag, Modal, Form, Input } from 'antd';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport axios from 'axios';\nimport { eventTypesUrls } from '../../../redux/api'\nimport { editToast, errorToast, successToast } from '../../../common/Notifications';\nimport { getAllEventTypes } from '../../../redux/actions/eventTypes/getTypesAction';\nimport { createEventTypeAction } from '../../../redux/actions/eventTypes/eventTypeCUD'\n\nexport const EventTypes = () => {\n\n    const dispatch = useDispatch();\n    const { eventTypes } = useSelector(state => state.eventTypesState);\n    useEffect(() => {\n        dispatch(getAllEventTypes());\n    }, []);\n\n\n\n    const [editMode, setEditMode] = useState(false);\n\n    //Add event type modal\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const openModalforAdd = () => {\n        setEditMode(false);\n        setIsModalVisible(true);\n        formik.values.name = \"\";\n        formik.values.id = 0;\n    };\n\n\n\n    const openModalforEdit = async (id) => {\n        const eventT = await axios.get(eventTypesUrls.details(id));\n        formik.values.name = eventT.data.name;\n        formik.values.id = eventT.data.id;\n        setEditMode(true);\n        setIsModalVisible(true);\n    };\n\n    //Edit Submit Handler\n    const editHandler = async () => {\n        await axios.put(eventTypesUrls.edit(formik.values.id), formik.values);\n        setIsModalVisible(false);\n        editToast(\"Event Type updated ! ✅\");\n    }\n\n\n    const closeModal = () => {\n        setIsModalVisible(false);\n    };\n\n    //Delete Modal\n    const [isDModalVisible, setIsDModalVisible] = useState(false);\n    const openDModal = () => {\n        setIsDModalVisible(true);\n    };\n\n    const closeDModal = () => {\n        setIsDModalVisible(false);\n    };\n\n    //Load event Type\n    const [getEvType, setGetEvType] = useState({})\n\n    const loadEType = async (id) => {\n        const eventT = await axios.get(eventTypesUrls.details(id));\n        setGetEvType({ ...getEvType, ...eventT.data });\n        console.log(getEvType);\n        openDModal();\n    }\n\n    const deleteETypeHandle = async (id) => {\n        try {\n            const resp = await axios.delete(eventTypesUrls.delete(id));\n            editToast(resp.data);\n            eventTypes.filter(x => x.id !== id);\n            eventTypes.splice(eventTypes.findIndex(x => x.id === id), 1);\n            closeDModal();\n        } catch (error) {\n            errorToast(error.data);\n        }\n    }\n\n\n\n    //Form handling \n\n    //Initial Values\n    const myInitialValues = { name: '' };\n\n    //Validation\n    const myValidationSchema = new Yup.object({\n        name: Yup.string().required(),\n    })\n\n    //Form handler\n    const formik = useFormik({\n        validationSchema: myValidationSchema,\n        initialValues: myInitialValues\n    })\n\n    //Create Submit eType handler\n    const submitHandler = (eType) => {\n        eType.id = eventTypes[eventTypes.length - 1].id + 1;\n        dispatch(createEventTypeAction(eType));\n        eventTypes.push(eType);\n        setIsModalVisible(false);\n        successToast(\"Event Type has been Added ! 👌\");\n    }\n\n\n    return (\n        <div>\n            <div className=\"header\">\n                <Header as='h2'>\n                    <Icon style={{ marginTop: \"0.7rem\" }} name='list' />\n                    <Header.Content>\n                        Event Types List\n                        <Header.Subheader>Manage event categories</Header.Subheader>\n                    </Header.Content>\n                </Header>\n                <Button onClick={openModalforAdd} color=\"green\"><Icon name=\"calendar plus\" /> Create new Event Type</Button>\n            </div>\n            <Divider />\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Category Id</Table.HeaderCell>\n                        <Table.HeaderCell>Category Name</Table.HeaderCell>\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {eventTypes?.map(item => {\n                        return <Table.Row key={item.id}>\n                            <Table.Cell>{item.id}</Table.Cell>\n                            <Table.Cell>{item.name}</Table.Cell>\n                            <Table.Cell>\n                                <Icon onClick={() => openModalforEdit(item.id)} name=\"edit\" title=\"Edit\" color=\"blue\" size=\"large\" />\n                                &nbsp;&nbsp;\n                                <Icon onClick={() => loadEType(item.id)} style={{ cursor: 'pointer' }} size=\"large\" title=\"Delete\" name=\"trash\" color=\"red\" /></Table.Cell>\n                        </Table.Row>\n                    })}\n                </Table.Body>\n            </Table>\n\n\n            {/* Add Event type modal  */}\n            <Modal title={editMode ? \"Update Event\" : \"Add an Event Type\"}\n                visible={isModalVisible}\n                onCancel={closeModal}\n                footer={[\n                    <Button onClick={closeModal}>\n                        Cancel\n                </Button>,\n                    <Button\n                        disabled={Object.keys(formik.errors).length !== 0}\n                        onClick={() => editMode ? editHandler() : submitHandler(formik.values)}\n                        color={editMode ? \"blue\" : \"green\"}>\n                        {editMode ? \"Update\" : \"Create\"}\n                    </Button>,\n                ]}>\n                <Form layout=\"vertical\">\n                    <Form.Item\n                        label=\"Type Name\">\n                        <Input name='name' {...formik.getFieldProps('name')} />\n                        {formik.touched.name && formik.errors.name && <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.name}</pre>}\n                    </Form.Item>\n                </Form>\n            </Modal>\n\n\n            {/* Delete evType Modal */}\n            <Modal title='Delete Event Type'\n                visible={isDModalVisible}\n                onCancel={closeDModal}\n                footer={[\n                    <Button onClick={closeDModal}>\n                        Cancel\n                </Button>,\n                    <Button\n                        onClick={() => deleteETypeHandle(getEvType.id)}\n                        color=\"red\">\n                        Delete\n                </Button>,\n                ]}>\n                <h3>Are you sure you want to delete Event Type: <Tag style={{ fontSize: \"20px\" }} color=\"red\">{getEvType.name}</Tag></h3>\n            </Modal>\n\n        </div>\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/ClientReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/clientActions/getAllEventsAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventsHome.js",["202","203"],"import { motion, AnimatePresence, AnimateSharedLayout } from 'framer-motion';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Event } from \"./Event\"\nimport { EventDetail } from './EventDetail';\nimport \"./EventHome.scss\"\nimport \"../../searchItems.scss\";\nimport { getAllEventsAction } from '../../../redux/actions/clientActions/getAllEventsAction';\nexport const EventsHome = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getAllEventsAction());\n    }, [])\n    //get current location\n    const location = useLocation();\n    const pathId = location.pathname.split(\"/\")[2];\n\n    //get events from the state\n    const { availableEvents } = useSelector(state => state.clientState);\n\n    //set up search inputs (event name, event type, event country)\n    const [searchedEName, setSearchedEName] = useState(\"\");\n    const [searchedEType, setSearchedEType] = useState(\"Any\");\n    const [searchedECountry, setSearchedECountry] = useState(\"\");\n    const [searchedECity, setSearchedECity] = useState(\"\");\n\n\n    //Clear filters\n    const clearFilters = () => {\n        setSearchedECity(\"\");\n        setSearchedECountry(\"\");\n        setSearchedEType(\"Any\");\n        setSearchedEName(\"\");\n\n        //console.table(searchedECountry, searchedEName);\n    }\n\n    const contains = (event, prop, against) => event.event[prop].toLowerCase().includes(against.toLowerCase());\n\n    //const eventTypeContains = (event, against) => event.event.eventType.name.toLowerCase() ==== against.toLowerCase();\n\n    return (\n        <motion.div className=\"eventList\" style={{ marginTop: location.pathname === \"/Guest\" ? \"3rem\" : \"1rem\" }}>\n            <AnimateSharedLayout type=\"switch\">\n                {/* wrap all the components that will be transitioning*/}\n                <AnimatePresence>\n                    {/* The component that will be animated should have a conditional toggle, pathId here */}\n                    {pathId && <EventDetail pathId={pathId} />}\n                </AnimatePresence>\n                <h2 style={{ padding: \"0.3rem\", marginTop: \"3rem\" }}>Upcoming events</h2>\n\n                <div className=\"flex flex-row space-x-10 items-center\">\n                    <div className=\"styled-input wide multi\">\n                        <div >\n                            <input type=\"text\" value={searchedEName} name=\"fn\" id=\"fn\" autoComplete=\"off\" data-placeholder-focus=\"false\" required onChange={(e) => setSearchedEName(e.target.value)} />\n                            <label>Event Name</label>\n                        </div>\n                        <div>\n                            <input type=\"text\" value={searchedECountry} name=\"fn\" id=\"fn\" autoComplete=\"off\" data-placeholder-focus=\"false\" required onChange={(e) => setSearchedECountry(e.target.value)} />\n                            <label>Country</label>\n                        </div>\n\n                        <div >\n                            <input type=\"text\" value={searchedECity} name=\"ln\" id=\"ln\" autoComplete=\"off\" data-placeholder-focus=\"false\" required\n                                onChange={(e) => setSearchedECity(e.target.value)} />\n                            <label>City</label>\n                        </div>\n                    </div>\n                    <div >\n                        <button onClick={clearFilters} className=\"bg-pink-500 hover:bg-pink-700 text-white text-md rounded-lg w-32 h-20 focus:outline-none focus:ring-2 focus:ring-pink-600 focus:ring-opacity-50\">Clear</button>\n                    </div>\n                </div>\n\n                <motion.div className=\"events\" >\n                    {availableEvents.filter((event) => {\n                        if (contains(event, \"eventName\", searchedEName) && searchedECity === \"\" && searchedECountry === \"\" && searchedEType === \"Any\") {\n                            return event;\n                        }\n                        else if (contains(event, \"country\", searchedECountry) && searchedECity === \"\" && searchedEName === \"\") {\n                            return event;\n                        }\n                        else if (contains(event, \"city\", searchedECity) && searchedEName === \"\" && searchedECountry === \"\") {\n                            return event;\n                        }\n                        else if (contains(event, \"eventName\", searchedEName) && contains(event, \"city\", searchedECity) && searchedECountry === \"\") {\n                            return event;\n                        }\n\n                        else if (contains(event, \"eventName\", searchedEName) && contains(event, \"country\", searchedECountry) && searchedECity === \"\") {\n                            return event;\n                        }\n                        else if (contains(event, \"city\", searchedECity) && contains(event, \"country\", searchedECountry) && searchedEName === \"\") {\n                            return event;\n                        }\n                        else if (contains(event, \"eventName\", searchedEName) && contains(event, \"country\", searchedECountry) && contains(event, \"city\", searchedECity)) {\n                            return event;\n                        }\n                    }).map((event) => {\n                        return <Event key={event.event.id} event={event.event} />\n                    })}\n                </motion.div>\n            </AnimateSharedLayout>\n        </motion.div>\n    )\n}","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/Event.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/util.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventDetail.js",["204","205"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/Dashboard.js",["206"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/Redirect.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/ClientContent.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/ResetPassword.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/AdminList.js",["207"],"import React, { useEffect, useState } from 'react'\nimport { Button, Icon, Table } from 'semantic-ui-react'\nimport { Form, Input, Modal, Select, Tag } from 'antd';\nimport axios from 'axios';\nimport { adminDataUrl, authUrls, lockUnlockAdminUrl } from '../redux/api';\nimport { successToast } from '../common/Notifications';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useSelector } from 'react-redux';\n\nexport const AdminList = () => {\n\n    const [adminData, setAdminData] = useState([]);\n\n    const getAdminData = async () => {\n        const response = await axios.get(adminDataUrl);\n        setAdminData(response.data);\n    }\n\n\n\n    const lockUnlockAdmin = (id) => {\n        axios.get(lockUnlockAdminUrl(id)).then((resp) => {\n            successToast(resp.data);\n            getAdminData();\n        }, (error) => {\n            console.log(error);\n            toast.error(error.data);\n        })\n    }\n\n    //Set up admin add Modal\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const openModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const closeModal = () => {\n        setIsModalVisible(false);\n        clearValues();\n    };\n\n    //Admin Attributes\n    const myInitialValues = {\n        displayName: \"\",\n        email: \"\",\n        gender: \"\",\n        country: \"\",\n        age: null\n    }\n\n    //clear form Attributes\n    const clearValues = () => {\n        formik.values.email = \"\";\n        formik.values.country = \"\";\n        formik.values.gender = \"\";\n        formik.values.displayName = \"\";\n        formik.values.age = null;\n    }\n\n    //Set up object validation\n    const myValidationSchema = new Yup.ObjectSchema({\n        displayName: Yup.string().required(),\n        email: Yup.string().email().required(),\n        country: Yup.string().required(),\n        gender: Yup.string().required(),\n        age: Yup.number().required()\n    })\n\n    //Submit method\n    const addAdminHandler = async (values) => {\n        try {\n            const response = await axios.post(authUrls.register, values);\n            if (response) {\n                successToast(response.data);\n                closeModal();\n                getAdminData();\n            }\n        } catch (error) {\n            toast.error(error.data);\n        }\n\n    }\n\n    //Set up formik object to handle the form\n    const formik = useFormik({\n        validationSchema: myValidationSchema,\n        initialValues: myInitialValues,\n\n    })\n\n    useEffect(() => {\n        getAdminData();\n    }, [])\n\n\n    //get  countries\n    const { countries } = useSelector(state => state.userState);\n\n    return (\n        <div style={{ padding: \"0.7rem\" }}>\n            <a onClick={openModal} href=\"#\" className=\"border-2 border-indigo-700 rounded-full float-right font-bold text-indigo-700 px-4 py-3 transition duration-300 ease-in-out hover:bg-indigo-700 hover:text-white mr-6\">\n                New Admin</a>\n            <br />\n            <br />\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Id</Table.HeaderCell>\n                        <Table.HeaderCell>Name</Table.HeaderCell>\n                        <Table.HeaderCell>Email</Table.HeaderCell>\n                        <Table.HeaderCell>Age</Table.HeaderCell>\n                        <Table.HeaderCell>Country</Table.HeaderCell>\n                        <Table.HeaderCell>Total revenue</Table.HeaderCell>\n                        <Table.HeaderCell>Lock/Unlock account</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {adminData?.map(item => {\n                        return <Table.Row key={item.id}>\n                            <Table.Cell>{item.id}</Table.Cell>\n                            <Table.Cell>{item.displayName}</Table.Cell>\n                            <Table.Cell>{item.email}</Table.Cell>\n                            <Table.Cell>{item.age}</Table.Cell>\n                            <Table.Cell>{item.country}</Table.Cell>\n                            <Table.Cell> <Tag color=\"volcano\">${item.totalRevenue}</Tag> </Table.Cell>\n                            <Table.Cell> <Icon onClick={() => lockUnlockAdmin(item.id)} color={`${item.isAccNonLocked ? \"green\" : \"red\"}`} name={`${item.isAccNonLocked ? \"lock open\" : \"lock\"}`} /></Table.Cell>\n                        </Table.Row>\n                    })}\n                </Table.Body>\n            </Table>\n\n            {/* Add Admin modal  */}\n            <Modal title=\"Add an Admin\"\n                visible={isModalVisible}\n                onCancel={closeModal}\n                footer={[\n                    <Button onClick={closeModal}>\n                        Cancel\n                </Button>,\n                    <Button\n                        disabled={Object.keys(formik.errors).length !== 0}\n                        onClick={() => addAdminHandler(formik.values)}\n                        color=\"purple\">\n                        Add\n                    </Button>,\n                ]}>\n                <Form layout=\"vertical\">\n                    <Form.Item label=\"Email\">\n                        <Input name='email' {...formik.getFieldProps('email')} />\n                        {formik.touched.email && formik.errors.email &&\n                            <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.email}</pre>}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Display Name\">\n                        <Input name='displayName' {...formik.getFieldProps('displayName')} />\n                        {formik.touched.displayName && formik.errors.displayName &&\n                            <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.displayName}</pre>}\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Age\">\n                        <Input name='age' {...formik.getFieldProps('age')} />\n                        {formik.touched.age && formik.errors.age &&\n                            <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.age}</pre>}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Gender\">\n                        <Select name='gender'\n                            onChange={gender => formik.setFieldValue('gender', gender)}\n                            value={formik.values.gender} >\n                            <Select.Option value=\"Male\">Male</Select.Option>\n                            <Select.Option value=\"Female\">Female</Select.Option>\n                            <Select.Option value=\"Other\">Other</Select.Option>\n                        </Select>\n                        {formik.touched.gender && formik.errors.gender &&\n                            <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.gender}</pre>}\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Country\">\n                        <Select\n                            name='country'\n                            onChange={country => formik.setFieldValue('country', country)}\n                            value={formik.values.country}>\n                            {countries.map(c => {\n                                return <Select.Option key={c.country} value={c.country}>{c.country}</Select.Option>\n                            })}\n                        </Select>\n                        {formik.touched.country && formik.values.country === \"\" && console.log(formik.errors.country)}\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </div>\n\n\n\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Register.js",["208","209"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport \"./register.scss\"\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { authUrls } from '../../redux/api';\nimport { successToast } from '../../common/Notifications';\nimport { toast } from 'react-toastify';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nexport const Register = () => {\n\n\n    const history = useHistory();\n\n    //Formik Set Up\n\n    //Admin Attributes\n    const myInitialValues = {\n        displayName: \"\",\n        email: \"\",\n        gender: \"\",\n        country: \"\",\n        password: \"\",\n        age: 0\n    }\n\n    //Set up object validation\n    const myValidationSchema = new Yup.ObjectSchema({\n        displayName: Yup.string().required(),\n        email: Yup.string().email().required(),\n        country: Yup.string().required(),\n        gender: Yup.string().required(),\n        age: Yup.number().required(),\n        password: Yup.string().required()\n    })\n\n    //Submit method\n    const registerHandler = async (values) => {\n        console.log(values);\n        try {\n            const response = await axios.post(authUrls.register, values);\n            if (response) {\n                successToast(response.data);\n                history.push(\"/\");\n            }\n        } catch (error) {\n            toast.error(error.data);\n        }\n    }\n\n    //Set up formik object to handle the form\n    const formik = useFormik({\n        validationSchema: myValidationSchema,\n        initialValues: myInitialValues,\n    })\n\n\n    const { countries } = useSelector(state => state.userState)\n    return (\n        <div className=\"register\">\n            <div className=\"title\">\n                <h2>Register</h2>\n            </div>\n            <div className=\"form md:mt-10\">\n                <div className=\"flex py-0 px-9 mt-3\">\n\n                    <div className=\"flex-1 flex-col m-6 mt-28\">\n\n                        <label className=\"reglabel\">Email</label>\n\n                        <input className=\"reginput\" type=\"text\" name='email' value={formik.values.email} {...formik.getFieldProps(\"email\")} />\n\n                        {formik.touched.email && formik.errors.email &&\n                            <pre className=\"error\">{formik.errors.email}</pre>}\n                        <label className=\"reglabel\">Age</label>\n                        <input className=\"reginput\" type=\"number\" name='age' value={formik.values.age} {...formik.getFieldProps('age')} />\n                        {formik.touched.age && formik.errors.age &&\n                            <pre className=\"error\">{formik.errors.age}</pre>}\n\n                        <label className=\"reglabel\">Country</label>\n                        <select className=\"reginput\" type=\"text\" {...formik.getFieldProps(\"country\")} >\n                            <option value=\"\" disabled></option>\n                            {countries.map(c => {\n                                return <option key={c.country} value={c.country}>{c.country}</option>\n                            })}\n                        </select>\n\n\n                        <button className=\"regBtn\" onClick={() => registerHandler(formik.values)}>\n                            Create Account\n                        </button>\n                    </div>\n                    <div className=\"flex-1 flex-col m-6 mt-28\">\n\n                        <label className=\"reglabel\">Display Name</label>\n\n                        <input className=\"reginput\" type=\"text\" name='displayName' value={formik.values.displayName} {...formik.getFieldProps(\"displayName\")} />\n\n                        {formik.touched.displayName && formik.errors.displayName &&\n                            <pre className=\"error\">{formik.errors.displayName}</pre>}\n\n                        <label className=\"reglabel\">Password</label>\n\n                        <input className=\"reginput\" type=\"password\" name='password' value={formik.values.password} {...formik.getFieldProps('password')} />\n                        {formik.touched.password && formik.errors.password &&\n                            <span className=\"error\">{formik.errors.password}</span>}\n\n                        <label className=\"reglabel\">Gender</label>\n                        <select className=\"reginput\" type=\"text\" {...formik.getFieldProps(\"gender\")} >\n                            <option value=\"\" disabled></option>\n                            <option value=\"Male\">Male</option>\n                            <option value=\"Female\">Female</option>\n                            <option value=\"Other\">Other</option>\n                        </select>\n                    </div>\n\n                </div>\n            </div>\n        </div >)\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/ClientBookings.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/EditProfile.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadCountries.js",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":29,"column":11,"nodeType":"216","endLine":29,"endColumn":81},{"ruleId":"214","severity":1,"message":"215","line":43,"column":9,"nodeType":"216","endLine":43,"endColumn":96},{"ruleId":"217","severity":1,"message":"218","line":2,"column":10,"nodeType":"219","messageId":"220","endLine":2,"endColumn":14},{"ruleId":"217","severity":1,"message":"221","line":2,"column":16,"nodeType":"219","messageId":"220","endLine":2,"endColumn":21},{"ruleId":"217","severity":1,"message":"222","line":2,"column":23,"nodeType":"219","messageId":"220","endLine":2,"endColumn":29},{"ruleId":"217","severity":1,"message":"223","line":2,"column":31,"nodeType":"219","messageId":"220","endLine":2,"endColumn":39},{"ruleId":"214","severity":1,"message":"215","line":122,"column":17,"nodeType":"216","endLine":122,"endColumn":46},{"ruleId":"214","severity":1,"message":"215","line":150,"column":19,"nodeType":"216","endLine":150,"endColumn":22},{"ruleId":"214","severity":1,"message":"215","line":152,"column":17,"nodeType":"216","endLine":152,"endColumn":45},{"ruleId":"217","severity":1,"message":"224","line":2,"column":17,"nodeType":"219","messageId":"220","endLine":2,"endColumn":26},{"ruleId":"225","severity":1,"message":"226","line":19,"column":8,"nodeType":"227","endLine":19,"endColumn":10,"suggestions":"228"},{"ruleId":"225","severity":1,"message":"226","line":16,"column":8,"nodeType":"227","endLine":16,"endColumn":10,"suggestions":"229"},{"ruleId":"230","severity":1,"message":"231","line":78,"column":53,"nodeType":"232","messageId":"233","endLine":78,"endColumn":55},{"ruleId":"217","severity":1,"message":"234","line":17,"column":10,"nodeType":"219","messageId":"220","endLine":17,"endColumn":15},{"ruleId":"217","severity":1,"message":"235","line":24,"column":19,"nodeType":"219","messageId":"220","endLine":24,"endColumn":24},{"ruleId":"225","severity":1,"message":"236","line":58,"column":6,"nodeType":"227","endLine":58,"endColumn":8,"suggestions":"237"},{"ruleId":"214","severity":1,"message":"238","line":105,"column":13,"nodeType":"216","endLine":105,"endColumn":223},{"ruleId":"217","severity":1,"message":"224","line":2,"column":17,"nodeType":"219","messageId":"220","endLine":2,"endColumn":26},{"ruleId":"217","severity":1,"message":"239","line":2,"column":28,"nodeType":"219","messageId":"220","endLine":2,"endColumn":36},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["242"],["243"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'toast' is defined but never used.","'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user?.role?.name'. Either include it or remove the dependency array.",["244"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"245","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [dispatch]",{"range":"250","text":"251"},{"range":"252","text":"251"},"Update the dependencies array to be: [user?.role?.name]",{"range":"253","text":"254"},[838,840],"[dispatch]",[604,606],[1743,1745],"[user?.role?.name]"]