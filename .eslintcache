[{"/Users/anascheriet/Documents/Projects/React/events_web_app/src/index.js":"1","/Users/anascheriet/Documents/Projects/React/events_web_app/src/App.js":"2","/Users/anascheriet/Documents/Projects/React/events_web_app/src/reportWebVitals.js":"3","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Sidebar.js":"4","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/SideBar.js":"5","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/NavBar.js":"6","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Navbar.js":"7","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Content.js":"8","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/rootReducer.js":"9","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/userReducer.js":"10","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/api.js":"11","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/login.js":"12","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Login.js":"13","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Exemple.js":"14","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/logoutAction.js":"15","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadUserInfo.js":"16","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loginAction.js":"17","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventTypeReducer.js":"18","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/getTypesAction.js":"19","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/eventTypeCUD.js":"20","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/animations.js":"21","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/CountryCityDATA.js":"22","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/eventAction.js":"23","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/Notifications.js":"24","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/loadEventAction.js":"25","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventReducer.js":"26","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventsDashboard.js":"27","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventEditForm.js":"28","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventForm.js":"29","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventTypes.js":"30","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/ClientReducer.js":"31","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/clientActions/getAllEventsAction.js":"32","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventsHome.js":"33","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/Event.js":"34","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/util.js":"35","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventDetail.js":"36","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/Dashboard.js":"37"},{"size":1733,"mtime":1611419902885,"results":"38","hashOfConfig":"39"},{"size":2172,"mtime":1611440584573,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":1610046698593,"results":"41","hashOfConfig":"39"},{"size":953,"mtime":1611427651513,"results":"42","hashOfConfig":"39"},{"size":967,"mtime":1610059435350,"results":"43","hashOfConfig":"39"},{"size":484,"mtime":1610059441419,"results":"44","hashOfConfig":"39"},{"size":1742,"mtime":1611247686019,"results":"45","hashOfConfig":"39"},{"size":283,"mtime":1611420485038,"results":"46","hashOfConfig":"39"},{"size":432,"mtime":1611230950749,"results":"47","hashOfConfig":"39"},{"size":886,"mtime":1611181197971,"results":"48","hashOfConfig":"39"},{"size":2035,"mtime":1611665227929,"results":"49","hashOfConfig":"39"},{"size":191,"mtime":1610225178281,"results":"50","hashOfConfig":"39"},{"size":2382,"mtime":1611442184721,"results":"51","hashOfConfig":"39"},{"size":3120,"mtime":1610492708884,"results":"52","hashOfConfig":"39"},{"size":230,"mtime":1611425673266,"results":"53","hashOfConfig":"39"},{"size":358,"mtime":1611181242922,"results":"54","hashOfConfig":"39"},{"size":373,"mtime":1611425620082,"results":"55","hashOfConfig":"39"},{"size":341,"mtime":1611161273030,"results":"56","hashOfConfig":"39"},{"size":307,"mtime":1611319663689,"results":"57","hashOfConfig":"39"},{"size":201,"mtime":1610652907595,"results":"58","hashOfConfig":"39"},{"size":553,"mtime":1611257977076,"results":"59","hashOfConfig":"39"},{"size":1032381,"mtime":1610998461066,"results":"60","hashOfConfig":"39"},{"size":173,"mtime":1611161749133,"results":"61","hashOfConfig":"39"},{"size":597,"mtime":1611179050768,"results":"62","hashOfConfig":"39"},{"size":479,"mtime":1611164041248,"results":"63","hashOfConfig":"39"},{"size":496,"mtime":1611186851562,"results":"64","hashOfConfig":"39"},{"size":5260,"mtime":1611493453212,"results":"65","hashOfConfig":"39"},{"size":7434,"mtime":1611428497517,"results":"66","hashOfConfig":"39"},{"size":8061,"mtime":1611390803736,"results":"67","hashOfConfig":"39"},{"size":6774,"mtime":1611428193841,"results":"68","hashOfConfig":"39"},{"size":304,"mtime":1611231455512,"results":"69","hashOfConfig":"39"},{"size":304,"mtime":1611231451894,"results":"70","hashOfConfig":"39"},{"size":1604,"mtime":1611419112480,"results":"71","hashOfConfig":"39"},{"size":1389,"mtime":1611259048441,"results":"72","hashOfConfig":"39"},{"size":685,"mtime":1611444546795,"results":"73","hashOfConfig":"39"},{"size":6140,"mtime":1611411805917,"results":"74","hashOfConfig":"39"},{"size":12904,"mtime":1611667456628,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"12qyaxg",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anascheriet/Documents/Projects/React/events_web_app/src/index.js",[],["155","156"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/App.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/reportWebVitals.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Sidebar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/SideBar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/NavBar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Navbar.js",["157","158"],"import React from \"react\";\nimport { Menu, Dropdown } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutAction } from \"../redux/actions/Users/logoutAction\"\nimport { useHistory } from \"react-router-dom\";\nconst Navbar = ({ setToggle }) => {\n\n  const dispatch = useDispatch();\n\n  const { token, user } = useSelector(state => state.userState);\n\n  const history = useHistory();\n\n\n  const isAdmin = token !== null && user?.role?.name !== \"Client\";\n\n  const logOut = () => {\n    dispatch(logoutAction());\n    history.push(\"/\");\n  }\n\n  const menu = (\n    <Menu style={{ backgroundColor: \"#14213d\" }}>\n      <Menu.Item >\n        <a target=\"_blank\" className=\"menuLink\" style={{ color: \"#fdde6c\" }} >\n          <i className=\"fas fa-user\" style={{ marginRight: \"1rem\" }} />\n              Profile\n            </a>\n      </Menu.Item>\n      <Menu.Item >\n        <a onClick={logOut} className=\"menuLink\" target=\"_blank\" style={{ color: \"#fdde6c\" }} >\n          <i className=\"fas fa-sign-out-alt\" style={{ marginRight: \"1rem\" }} />\n              Log out\n            </a>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"brand\">\n        {isAdmin && <div className=\"hamburger\" onClick={setToggle}>\n          <div />\n          <div />\n          <div />\n        </div>}\n\n        <div className=\"logo\">\n          <a style={{ color: \"#fdde6c\", textTransform: \"lowercase\", paddingLeft: \"2rem\", fontSize: \"25px\" }} href=\"#!\">eventor</a>\n        </div>\n      </div>\n\n      <Dropdown overlay={menu}>\n        <div className=\"left\">\n          <i style={{ color: \"#fdde6c\" }} className=\"fas fa-chevron-down\" />\n        </div>\n      </Dropdown>\n    </div>\n  );\n};\n\n\nexport default Navbar;\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Content.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/rootReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/userReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/api.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/login.js",["159","160","161","162"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Login.js",["163","164","165","166","167"],"import { motion } from 'framer-motion';\nimport React, { useEffect } from 'react'\nimport \"./login.scss\"\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/actions/Users/loginAction';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nexport const Login = () => {\n\n  //Router redirector\n  const history = useHistory();\n\n  //need a dispatcher that executes the action !!!!!!!!!!:D\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    username: '',\n    password: ''\n  }\n\n  const ValidationSchema = new Yup.ObjectSchema({\n    username: Yup.string().required(),\n    password: Yup.string().required()\n    /* password: Yup.string().matches(\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$\") */\n  })\n\n  const submitHandler = (values) => {\n    dispatch(login(values));\n  }\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: ValidationSchema,\n    onSubmit: submitHandler\n  })\n\n\n  return (\n    <div className=\"all\">\n      <motion.div\n        className=\"logo-container\"\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ ease: \"backOut\", duration: 1 }}>\n        <div className=\"name\">\n          <h2>eventor</h2>\n        </div>\n        <div className=\"description\">\n          <h2>EVENT PLANNING.</h2>\n        </div>\n      </motion.div>\n\n      <div className=\"form\">\n        <form onSubmit={formik.handleSubmit}>\n          <label className=\"label\">USERNAME</label>\n          <br />\n          <input type=\"text\" name=\"username\" className=\"input\" {...formik.getFieldProps(\"username\")} />\n          <br />\n          {formik.touched.username && formik.errors.username &&\n            <span>{formik.errors.username}</span>}\n          <br />\n          <label className=\"label\">PASSWORD</label>\n          <br />\n          <input type=\"password\" name=\"password\" className=\"input\" {...formik.getFieldProps(\"password\")} />\n          <br />\n          {formik.touched.password && formik.errors.password &&\n            <span>{formik.errors.password}</span>}\n          <br />\n\n          <button type=\"submit\" className=\"submitBtn\" >Log In</button>\n\n        </form>\n        <div className=\"links\">\n          <a >Create Account</a>\n          <a >Forgot Password?</a>\n        </div>\n      </div>\n\n    </div>\n  );\n\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Exemple.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/logoutAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadUserInfo.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loginAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventTypeReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/getTypesAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/eventTypeCUD.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/animations.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/CountryCityDATA.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/eventAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/Notifications.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/loadEventAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventsDashboard.js",["168","169","170","171","172"],"import React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Button, ButtonGroup, Card, Header, Icon, Divider } from 'semantic-ui-react'\nimport { Drawer } from 'antd';\nimport \"./eventsDashboard.scss\"\nimport { popup } from '../../../common/animations';\nimport { EventForm } from './EventForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadUserInfo } from '../../../redux/actions/Users/loadUserInfo';\nimport { EventEditForm } from './EventEditForm';\nimport { getAllEventTypes } from '../../../redux/actions/eventTypes/getTypesAction';\nimport { loadEventAction, unMountDrawer } from '../../../redux/actions/eventActions/loadEventAction';\nimport { formatDate, formatImageLink } from '../../../common/util';\n\nexport const EventsDashboard = () => {\n\n    //set up the dispatcher for actions (api calls)\n    const dispatch = useDispatch();\n\n    //get user Info on component load \n    useEffect(() => {\n        console.log(\"here\");\n        dispatch(loadUserInfo());\n        dispatch(getAllEventTypes());\n    }, [dispatch]);\n\n    //Getting the state\n    const { createdEvents } = useSelector(state => state.userState);\n\n    const { drawer } = useSelector(state => state.eventState);\n\n    //setUp Drawer for Create/Edit event form\n    const [visibleDrawer, setVisibleDrawer] = useState(false);\n\n    const showDrawer = () => {\n        setVisibleDrawer(true);\n    };\n    const closeDrawer = () => {\n        setVisibleDrawer(false);\n    };\n\n    //Set up conditional rendering of edit event form\n    const [editDrawer, setEditDrawer] = useState(false);\n\n    const showEDrawer = () => {\n        setEditDrawer(true);\n    };\n\n    const closeEDrawer = () => {\n        setEditDrawer(false);\n        dispatch(unMountDrawer());\n    };\n\n    const openEditEventForm = async (id) => {\n        showEDrawer();\n        dispatch(loadEventAction(id));\n    }\n\n    return (\n        <div>\n            <div className=\"header\">\n                <Header as='h2'>\n                    <Icon name='calendar' />\n                    <Header.Content>\n                        Events List\n      <Header.Subheader>Manage your events</Header.Subheader>\n                    </Header.Content>\n                </Header>\n                <Button onClick={showDrawer} color=\"green\"><Icon name=\"calendar\" /> Create new Event</Button>\n            </div>\n\n            <Divider />\n\n            {/* List of Events */}\n            <div className=\"container my-12 mx-auto px-4 md:px-12\" style={{ backgroundImage: \"\" }}>\n                <div className=\"flex flex-wrap -mx-1 lg:-mx-4\">\n                    {createdEvents.map((item) => {\n\n                        {/* Column_Start */ }\n                        return (\n                            <motion.div className=\"my-1 px-1 w-full md:w-1/2 lg:my-4 lg:px-4 lg:w-1/3\" variants={popup} initial=\"hidden\" animate=\"show\">\n                                {/* Article Start */}\n                                <article className=\"overflow-hidden rounded-lg shadow-lg\">\n                                    <img alt=\"Placeholder\" className=\"block h-auto w-full\" src={formatImageLink(item.imagePath)} style={{ width: \"400px\", height: \"200px\" }} />\n\n                                    <header className=\"flex items-center justify-between leading-tight p-2 md:p-4\">\n                                        <h1 class=\"text-lg\">\n                                            <p class=\"text-lg text-gray-800\">{item.eventName}</p>\n                                            <p class=\"text-lg text-gray-800\">${item.ticketPrice}</p>\n                                        </h1>\n                                        {formatDate(item.eventDate)}\n                                    </header>\n                                    <p class=\"ml-3 mr-3 mb-4 text-grey-dark text-sm\"> {item.description.substring(1, 160)}...</p>\n                                    <footer className=\"flex items-center justify-center leading-tight p-3 md:p-5\">\n                                        <button onClick={() => openEditEventForm(item.id)} className=\"bg-white text-blue-700 font-bold py-2 px-4\">Edit</button>&nbsp;\n          <button className=\"bg-white text-red-700 font-bold py-2 px-4\">Delete</button>\n                                    </footer>\n\n                                </article>\n                            </motion.div>)\n                        {/* Column End */ }\n                    })}\n                </div>\n            </div>\n\n            {/* Create form Drawer  */}\n            <Drawer\n                width={400}\n                placement=\"right\"\n                closable={false}\n                onClose={closeDrawer}\n                visible={visibleDrawer}\n            >\n                <EventForm\n                    closeDrawer={closeDrawer}\n                />\n            </Drawer>\n\n            {/* Edit form Drawer  */}\n            {drawer &&\n                <Drawer\n                    width={400}\n                    placement=\"right\"\n                    closable={false}\n                    onClose={closeEDrawer}\n                    visible={editDrawer}\n                >\n                    <EventEditForm closeEDrawer={closeEDrawer} />\n                </Drawer>\n            }\n        </div>\n\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventEditForm.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventForm.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/EventTypes.js",["173"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Header, Icon, Table, Divider } from 'semantic-ui-react'\nimport { Tag, Modal, Form, Input } from 'antd';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport axios from 'axios';\nimport { eventTypesUrls } from '../../../redux/api'\nimport { editToast, successToast } from '../../../common/Notifications';\nimport { getAllEventTypes } from '../../../redux/actions/eventTypes/getTypesAction';\nimport { createEventTypeAction } from '../../../redux/actions/eventTypes/eventTypeCUD'\n\nexport const EventTypes = () => {\n\n    const dispatch = useDispatch();\n    const { eventTypes } = useSelector(state => state.eventTypesState);\n    useEffect(() => {\n        dispatch(getAllEventTypes());\n    }, []);\n\n\n\n    const [editMode, setEditMode] = useState(false);\n\n    //Add event type modal\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const openModalforAdd = () => {\n        setEditMode(false);\n        setIsModalVisible(true);\n        formik.values.name = \"\";\n        formik.values.id = 0;\n    };\n\n\n\n    const openModalforEdit = async (id) => {\n        const eventT = await axios.get(eventTypesUrls.details(id));\n        formik.values.name = eventT.data.name;\n        formik.values.id = eventT.data.id;\n        setEditMode(true);\n        setIsModalVisible(true);\n    };\n\n    //Edit Submit Handler\n    const editHandler = async () => {\n        await axios.put(eventTypesUrls.edit(formik.values.id), formik.values);\n        setIsModalVisible(false);\n        editToast(\"Event Type updated ! ✅\");\n    }\n\n\n    const closeModal = () => {\n        setIsModalVisible(false);\n    };\n\n    //Delete Modal\n    const [isDModalVisible, setIsDModalVisible] = useState(false);\n    const openDModal = () => {\n        setIsDModalVisible(true);\n    };\n\n    const closeDModal = () => {\n        setIsDModalVisible(false);\n    };\n\n    //Load event Type\n    const [getEvType, setGetEvType] = useState({})\n\n    const loadEType = async (id) => {\n        const eventT = await axios.get(eventTypesUrls.details(id));\n        setGetEvType({ ...getEvType, ...eventT.data });\n        console.log(getEvType);\n        openDModal();\n    }\n\n    const deleteETypeHandle = async (id) => {\n        await axios.delete(eventTypesUrls.delete(id)).catch(err => console.log(err));\n        eventTypes.filter(x => x.id !== id);\n        eventTypes.splice(eventTypes.findIndex(x => x.id === id), 1);\n        editToast(\"Event Type has been deleted ! 👍\");\n        closeDModal();\n    }\n\n\n\n    //Form handling \n\n    //Initial Values\n    const myInitialValues = { name: '' };\n\n    //Validation\n    const myValidationSchema = new Yup.object({\n        name: Yup.string().required(),\n    })\n\n    //Form handler\n    const formik = useFormik({\n        validationSchema: myValidationSchema,\n        initialValues: myInitialValues\n    })\n\n    //Create Submit eType handler\n    const submitHandler = (eType) => {\n        eType.id = eventTypes[eventTypes.length - 1].id + 1;\n        dispatch(createEventTypeAction(eType));\n        eventTypes.push(eType);\n        setIsModalVisible(false);\n        successToast(\"Event Type has been Added ! 👌\");\n    }\n\n\n    return (\n        <div>\n            <div className=\"header\">\n                <Header as='h2'>\n                    <Icon style={{ marginTop: \"0.7rem\" }} name='list' />\n                    <Header.Content>\n                        Event Types List\n                        <Header.Subheader>Manage event categories</Header.Subheader>\n                    </Header.Content>\n                </Header>\n                <Button onClick={openModalforAdd} color=\"green\"><Icon name=\"calendar plus\" /> Create new Event Type</Button>\n            </div>\n            <Divider />\n            <Table celled>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Category Id</Table.HeaderCell>\n                        <Table.HeaderCell>Category Name</Table.HeaderCell>\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {eventTypes?.map(item => {\n                        return <Table.Row key={item.id}>\n                            <Table.Cell>{item.id}</Table.Cell>\n                            <Table.Cell>{item.name}</Table.Cell>\n                            <Table.Cell>\n                                <Icon onClick={() => openModalforEdit(item.id)} name=\"edit\" title=\"Edit\" color=\"blue\" size=\"large\" />\n                                &nbsp;&nbsp;\n                                <Icon onClick={() => loadEType(item.id)} style={{ cursor: 'pointer' }} size=\"large\" title=\"Delete\" name=\"trash\" color=\"red\" /></Table.Cell>\n                        </Table.Row>\n                    })}\n                </Table.Body>\n            </Table>\n\n\n            {/* Add Event type modal  */}\n            <Modal title={editMode ? \"Update Event\" : \"Add an Event Type\"}\n                visible={isModalVisible}\n                onCancel={closeModal}\n                footer={[\n                    <Button onClick={closeModal}>\n                        Cancel\n                </Button>,\n                    <Button\n                        disabled={Object.keys(formik.errors).length !== 0}\n                        onClick={() => editMode ? editHandler() : submitHandler(formik.values)}\n                        color={editMode ? \"blue\" : \"green\"}>\n                        {editMode ? \"Update\" : \"Create\"}\n                    </Button>,\n                ]}>\n                <Form layout=\"vertical\">\n                    <Form.Item\n                        label=\"Type Name\">\n                        <Input name='name' {...formik.getFieldProps('name')} />\n                        {formik.touched.name && formik.errors.name && <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.name}</pre>}\n                    </Form.Item>\n                </Form>\n            </Modal>\n\n\n            {/* Delete evType Modal */}\n            <Modal title='Delete Event Type'\n                visible={isDModalVisible}\n                onCancel={closeDModal}\n                footer={[\n                    <Button onClick={closeDModal}>\n                        Cancel\n                </Button>,\n                    <Button\n                        onClick={() => deleteETypeHandle(getEvType.id)}\n                        color=\"red\">\n                        Delete\n                </Button>,\n                ]}>\n                <h3>Are you sure you want to delete Event Type: <Tag style={{ fontSize: \"20px\" }} color=\"red\">{getEvType.name}</Tag></h3>\n            </Modal>\n\n        </div>\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/ClientReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/clientActions/getAllEventsAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventsHome.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/Event.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/util.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Client/EventDetail.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Admin/Dashboard.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":25,"column":9,"nodeType":"180","endLine":25,"endColumn":79},{"ruleId":"178","severity":1,"message":"179","line":31,"column":9,"nodeType":"180","endLine":31,"endColumn":96},{"ruleId":"181","severity":1,"message":"182","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":14},{"ruleId":"181","severity":1,"message":"185","line":2,"column":16,"nodeType":"183","messageId":"184","endLine":2,"endColumn":21},{"ruleId":"181","severity":1,"message":"186","line":2,"column":23,"nodeType":"183","messageId":"184","endLine":2,"endColumn":29},{"ruleId":"181","severity":1,"message":"187","line":2,"column":31,"nodeType":"183","messageId":"184","endLine":2,"endColumn":39},{"ruleId":"181","severity":1,"message":"188","line":2,"column":17,"nodeType":"183","messageId":"184","endLine":2,"endColumn":26},{"ruleId":"181","severity":1,"message":"189","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":13},{"ruleId":"181","severity":1,"message":"190","line":14,"column":9,"nodeType":"183","messageId":"184","endLine":14,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":77,"column":11,"nodeType":"180","endLine":77,"endColumn":15},{"ruleId":"178","severity":1,"message":"179","line":78,"column":11,"nodeType":"180","endLine":78,"endColumn":15},{"ruleId":"181","severity":1,"message":"191","line":3,"column":18,"nodeType":"183","messageId":"184","endLine":3,"endColumn":29},{"ruleId":"181","severity":1,"message":"192","line":3,"column":31,"nodeType":"183","messageId":"184","endLine":3,"endColumn":35},{"ruleId":"193","severity":1,"message":"194","line":79,"column":25,"nodeType":"195","messageId":"196","endLine":79,"endColumn":46},{"ruleId":"193","severity":1,"message":"194","line":101,"column":25,"nodeType":"195","messageId":"196","endLine":101,"endColumn":44},{"ruleId":"197","severity":1,"message":"198","line":101,"column":25,"nodeType":"195","messageId":"199","endLine":101,"endColumn":44},{"ruleId":"200","severity":1,"message":"201","line":19,"column":8,"nodeType":"202","endLine":19,"endColumn":10,"suggestions":"203"},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'history' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'Card' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["206"],"no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},"Update the dependencies array to be: [dispatch]",{"range":"209","text":"210"},[826,828],"[dispatch]"]