[{"/Users/anascheriet/Documents/Projects/React/events_web_app/src/index.js":"1","/Users/anascheriet/Documents/Projects/React/events_web_app/src/App.js":"2","/Users/anascheriet/Documents/Projects/React/events_web_app/src/reportWebVitals.js":"3","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Sidebar.js":"4","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/SideBar.js":"5","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/NavBar.js":"6","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Navbar.js":"7","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Content.js":"8","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/rootReducer.js":"9","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/userReducer.js":"10","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/api.js":"11","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/login.js":"12","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Login.js":"13","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/dashboard.js":"14","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Dashboard.js":"15","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventsDashboard.js":"16","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Exemple.js":"17","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventForm.js":"18","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/logoutAction.js":"19","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadUserInfo.js":"20","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loginAction.js":"21","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventTypeReducer.js":"22","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/getTypesAction.js":"23","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventTypes.js":"24","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/eventTypeCUD.js":"25","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/animations.js":"26","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/CountryCityDATA.js":"27","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventEditForm.js":"28","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/eventAction.js":"29","/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/Notifications.js":"30","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/loadEventAction.js":"31","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventReducer.js":"32","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/HHHHH.js":"33"},{"size":1724,"mtime":1611175507291,"results":"34","hashOfConfig":"35"},{"size":1761,"mtime":1611177813731,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1610046698593,"results":"37","hashOfConfig":"35"},{"size":846,"mtime":1611177907755,"results":"38","hashOfConfig":"35"},{"size":967,"mtime":1610059435350,"results":"39","hashOfConfig":"35"},{"size":484,"mtime":1610059441419,"results":"40","hashOfConfig":"35"},{"size":1784,"mtime":1611177964385,"results":"41","hashOfConfig":"35"},{"size":256,"mtime":1610492706674,"results":"42","hashOfConfig":"35"},{"size":351,"mtime":1611164042719,"results":"43","hashOfConfig":"35"},{"size":802,"mtime":1611174355785,"results":"44","hashOfConfig":"35"},{"size":1536,"mtime":1611005121476,"results":"45","hashOfConfig":"35"},{"size":191,"mtime":1610225178281,"results":"46","hashOfConfig":"35"},{"size":2269,"mtime":1611174880797,"results":"47","hashOfConfig":"35"},{"size":325,"mtime":1610385636815,"results":"48","hashOfConfig":"35"},{"size":186,"mtime":1610463293214,"results":"49","hashOfConfig":"35"},{"size":7574,"mtime":1611173287971,"results":"50","hashOfConfig":"35"},{"size":3120,"mtime":1610492708884,"results":"51","hashOfConfig":"35"},{"size":8091,"mtime":1611005445350,"results":"52","hashOfConfig":"35"},{"size":230,"mtime":1611172963777,"results":"53","hashOfConfig":"35"},{"size":330,"mtime":1610639614890,"results":"54","hashOfConfig":"35"},{"size":373,"mtime":1610712910187,"results":"55","hashOfConfig":"35"},{"size":341,"mtime":1611161273030,"results":"56","hashOfConfig":"35"},{"size":306,"mtime":1610649879875,"results":"57","hashOfConfig":"35"},{"size":6682,"mtime":1610729599989,"results":"58","hashOfConfig":"35"},{"size":201,"mtime":1610652907595,"results":"59","hashOfConfig":"35"},{"size":553,"mtime":1610996444592,"results":"60","hashOfConfig":"35"},{"size":1032381,"mtime":1610998461066,"results":"61","hashOfConfig":"35"},{"size":7485,"mtime":1611164042225,"results":"62","hashOfConfig":"35"},{"size":173,"mtime":1611161749133,"results":"63","hashOfConfig":"35"},{"size":597,"mtime":1611005369235,"results":"64","hashOfConfig":"35"},{"size":479,"mtime":1611164041248,"results":"65","hashOfConfig":"35"},{"size":496,"mtime":1611161649623,"results":"66","hashOfConfig":"35"},{"size":127,"mtime":1611172829784,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"12qyaxg",{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/Users/anascheriet/Documents/Projects/React/events_web_app/src/index.js",[],["140","141"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/App.js",["142","143","144","145","146","147"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/reportWebVitals.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Sidebar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/SideBar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/NavBar.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Navbar.js",["148","149","150"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Content.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/rootReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/userReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/api.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/login.js",["151","152","153","154"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/auth/Login.js",["155","156"],"import { motion } from 'framer-motion';\nimport React from 'react'\nimport \"./login.scss\"\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../redux/actions/Users/loginAction';\n\nexport const Login = () => {\n\n  //need a dispatcher that executes the action !!!!!!!!!!:D\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    username: '',\n    password: ''\n  }\n\n  const ValidationSchema = new Yup.ObjectSchema({\n    username: Yup.string().required(),\n    password: Yup.string().required()\n    /* password: Yup.string().matches(\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$\") */\n  })\n\n  const submitHandler = (values) => {\n    console.log(values);\n    dispatch(login(values));\n  }\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: ValidationSchema,\n    onSubmit: submitHandler\n  })\n\n\n  return (\n    <div className=\"container\">\n      <motion.div\n        className=\"logo-container\"\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ ease: \"backOut\", duration: 1 }}>\n        <div className=\"name\">\n          <h2>eventor</h2>\n        </div>\n        <div className=\"description\">\n          <h2>EVENT PLANNING.</h2>\n        </div>\n      </motion.div>\n\n      <div className=\"form\">\n        <form onSubmit={formik.handleSubmit}>\n          <label className=\"label\">USERNAME</label>\n          <br />\n          <input type=\"text\" name=\"username\" className=\"input\" {...formik.getFieldProps(\"username\")} />\n          <br />\n          {formik.touched.username && formik.errors.username &&\n            <span>{formik.errors.username}</span>}\n          <br />\n          <label className=\"label\">PASSWORD</label>\n          <br />\n          <input type=\"password\" name=\"password\" className=\"input\" {...formik.getFieldProps(\"password\")} />\n          <br />\n          {formik.touched.password && formik.errors.password &&\n            <span>{formik.errors.password}</span>}\n          <br />\n\n          <button type=\"submit\" className=\"submitBtn\" >Log In</button>\n\n        </form>\n        <div className=\"links\">\n          <a >Create Account</a>\n          <a >Forgot Password?</a>\n        </div>\n      </div>\n\n    </div>\n  );\n\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/dashboard.js",["157"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/Dashboard.js",["158","159"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventsDashboard.js",["160","161","162"],"import React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Button, ButtonGroup, Card, Header, Icon, Divider } from 'semantic-ui-react'\nimport { Drawer } from 'antd';\nimport \"./eventsDashboard.scss\"\nimport { popup } from '../../common/animations';\nimport { EventForm } from './EventForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadUserInfo } from '../../redux/actions/Users/loadUserInfo';\nimport axios from 'axios';\nimport { eventsUrls } from '../../redux/api';\nimport { EventEditForm } from './EventEditForm';\nimport { getAllEventTypes } from '../../redux/actions/eventTypes/getTypesAction';\nimport { loadEventAction, unMountDrawer } from '../../redux/actions/eventActions/loadEventAction';\n\nexport const EventsDashboard = () => {\n\n    //Getting the state\n    const { user } = useSelector(state => state.userState);\n    const { createdEvents } = user;\n\n    const { drawer } = useSelector(state => state.eventState);\n\n\n    //set up the dispatcher for actions (api calls)\n    const dispatch = useDispatch();\n    //get user Info on component load \n    useEffect(() => {\n        dispatch(loadUserInfo());\n        dispatch(getAllEventTypes);\n    }, []);\n\n\n    //setUp Drawer for Create/Edit event form\n    const [visibleDrawer, setVisibleDrawer] = useState(false);\n\n    const showDrawer = () => {\n        setVisibleDrawer(true);\n    };\n    const closeDrawer = () => {\n        setVisibleDrawer(false);\n    };\n\n    /* \n        const fakeData = [{\n            \"id\": 1,\n            \"eventName\": \"International Brand Consultant\",\n            \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n            \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n        },\n        {\n            \"id\": 2,\n            \"eventName\": \"International Brand Consultant\",\n            \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n            \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n        },\n        {\n            \"id\": 3,\n            \"eventName\": \"International Brand Consultant\",\n            \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n            \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n        }, {\n            \"id\": 4,\n            \"eventName\": \"International Brand Consultant\",\n            \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n            \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n        }, {\n            \"id\": 5,\n            \"eventName\": \"International Brand Consultant\",\n            \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n            \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n        }, {\n            \"id\": 6,\n            \"eventName\": \"International Brand Consultant\",\n            \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n            \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n        }, {\n            \"id\": 7,\n            \"eventName\": \"International Brand Consultant\",\n            \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n            \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n        }, {\n            \"id\": 8,\n            \"eventName\": \"International Brand Consultant\",\n            \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n            \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n        }, {\n            \"id\": 9,\n            \"eventName\": \"International Brand Consultant\",\n            \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n            \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n        }, {\n            \"id\": 10,\n            \"eventName\": \"International Brand Consultant\",\n            \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n            \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n        }, {\n            \"id\": 11,\n            \"eventName\": \"International Brand Consultant\",\n            \"eventDate\": \"Wed Jan 13 2021 05:27:46 GMT+0100 (GMT+01:00)\",\n            \"description\": \"Sit a sint reprehenderit tempore saepe expedita molestiae id.\"\n        }]\n     */\n\n\n    //Set up conditional rendering of edit event form\n    const [editDrawer, setEditDrawer] = useState(false);\n\n    const showEDrawer = () => {\n        setEditDrawer(true);\n    };\n\n    const closeEDrawer = () => {\n        setEditDrawer(false);\n        dispatch(unMountDrawer());\n    };\n\n    const openEditEventForm = async (id) => {\n        showEDrawer();\n        dispatch(loadEventAction(id));\n    }\n\n\n    return (\n        <>\n            <div className=\"header\">\n                <Header as='h2'>\n                    <Icon name='calendar' />\n                    <Header.Content>\n                        Events List\n      <Header.Subheader>Manage your events</Header.Subheader>\n                    </Header.Content>\n                </Header>\n                <Button onClick={showDrawer} color=\"green\"><Icon name=\"calendar\" /> Create new Event</Button>\n            </div>\n\n            <Divider />\n            <Card.Group >\n                {createdEvents?.map((item) => (\n                    <motion.div key={item.id} className=\"card\" variants={popup} initial=\"hidden\" animate=\"show\">\n                        <Card key={item.id} color=\"yellow\" >\n                            {/* <img src='https://dummyimage.com/300x180.png' alt='' /> */}\n                            <img src='https://dummyimage.com/300x200.png' alt='' />\n                            <Card.Content>\n                                <Card.Header>{item.eventName}</Card.Header>\n                                <Card.Meta>\n                                    <span className='date'>{/* {item.eventDate.split(\"T\")[0]} {item.eventDate.split(\"T\")[1].split(\".\")[0]} */}</span>\n                                </Card.Meta>\n                                <Card.Description>\n                                    {item.description.substring(1, 60)}...\n                                </Card.Description>\n                            </Card.Content>\n                            <Card.Content extra>\n                                <ButtonGroup widths={2}>\n                                    <Button onClick={() => openEditEventForm(item.id)} basic color='blue' content='Edit' />\n                                    <Button basic color='red' content='Delete' />\n                                </ButtonGroup>\n                            </Card.Content>\n                        </Card>\n                    </motion.div>\n\n                ))}\n            </Card.Group>\n\n            {/* Create form Drawer  */}\n\n            <Drawer\n                width={400}\n                placement=\"right\"\n                closable={false}\n                onClose={closeDrawer}\n                visible={visibleDrawer}\n            >\n                <EventForm\n                    closeDrawer={closeDrawer}\n                />\n            </Drawer>\n\n\n            {/* Edit form Drawer  */}\n            {drawer &&\n                <Drawer\n                    width={400}\n                    placement=\"right\"\n                    closable={false}\n                    onClose={closeEDrawer}\n                    visible={editDrawer}\n                >\n                    <EventEditForm closeEDrawer={closeEDrawer} />\n                </Drawer>\n            }\n        </>\n\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/Layout/Exemple.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventForm.js",["163"],"import React, { useEffect, useState } from 'react'\nimport {\n    Form,\n    Input,\n    Select,\n    DatePicker,\n    InputNumber,\n    Upload,\n    Button as AntdButton\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport \"./eventform.scss\"\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { Button } from 'semantic-ui-react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createEventAction } from '../../redux/actions/eventActions/eventAction'\nimport { successToast } from '../../common/Notifications';\nimport axios from 'axios';\nimport { uploadImageUrl } from '../../redux/api';\n\n//TODO load event data to edit form\n\n//Set up object validation\nexport const myValidationSchema = new Yup.ObjectSchema({\n    eventName: Yup.string().required(),\n    description: Yup.string().required(),\n    country: Yup.string().required(),\n    city: Yup.string().required(),\n    availabletickets: Yup.number().required().positive().integer(),\n    ticketprice: Yup.number().required().positive(),\n    eventtypeid: Yup.number().required(),\n    eventDate: Yup.string().required()\n})\n\nexport const EventForm = ({ closeDrawer, }) => {\n\n\n    //set uo the dispatcher for different actions\n    const dispatch = useDispatch();\n\n    //retrieve event types array from evTypes reducer\n    const { eventTypes } = useSelector(state => state.eventTypesState);\n\n    //Country / City Dropdown logic\n    const [CountryCity, setCountryCity] = useState([]);\n    const [Cities, setCities] = useState([]);\n\n    //fetch event types for form event type dropdown from the api on component load\n    useEffect(() => {\n        const fetchCountryAPI = async () => {\n            let response = await axios.get(\"https://countriesnow.space/api/v0.1/countries\");\n            setCountryCity(response.data.data);\n        }\n        fetchCountryAPI();\n        console.log(new Date(\"2021-01-16T02:00:00.042+00:00\"));\n    }, [])\n\n\n\n    //Set up Event Object\n    const initialValues = {\n        eventName: '',\n        description: '',\n        country: '',\n        city: '',\n        availabletickets: null,\n        ticketprice: null,\n        eventtypeid: null,\n        eventDate: '',\n        image: ''\n    }\n\n    \n\n\n    //Set up formik object to handle the form\n    const formik = useFormik({\n        validationSchema: myValidationSchema,\n        initialValues: initialValues,\n    })\n\n    //get events so we can add to them\n    const { user } = useSelector(state => state.userState);\n    const { createdEvents } = user;\n\n\n    //Submit method\n    const submitHandler = (event) => {\n        dispatch(createEventAction(event));\n        createdEvents.push(event);\n        closeDrawer();\n        successToast(\"The event Has been Created!\");\n    }\n\n\n    //Image upload logic\n    const eventImageUpload = async (file) => {\n        let formData = new FormData();\n        formData.append('file', file);\n        let response = await axios.post(uploadImageUrl, formData);\n        //Assign response to image path\n        formik.values.image = response.data;\n    }\n\n\n\n\n\n    return (\n        <Form\n            className=\"eventForm\"\n            wrapperCol={{ span: 26 }}\n            layout=\"vertical\"\n            onFinish={() => submitHandler(formik.values)}\n        >\n            <Form.Item label=\"Event Name\">\n                <Input name='eventName' {...formik.getFieldProps('eventName')} />\n                {formik.touched.eventName && formik.errors.eventName &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.eventName}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Event Type\">\n                <Select\n                    name='eventtypeid'\n                    onChange={evtype => formik.setFieldValue('eventtypeid', evtype)}\n                    value={formik.values.eventtypeid}>\n                    {eventTypes.map(eType => {\n                        return <Select.Option value={eType.id}>{eType.name}</Select.Option>\n                    })}\n                </Select>\n                {formik.touched.eventtypeid && formik.errors.eventtypeid &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.eventtypeid}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Country\">\n                <Select\n                    name='country'\n                    onChange={country => formik.setFieldValue('country', country)}\n                    onSelect={country => ((setCities(CountryCity.filter(x => x.country == country)[0].cities), formik.setFieldValue('country', country)))}\n                    value={formik.values.country}>\n                    {CountryCity.map(c => {\n                        return <Select.Option value={c.country}>{c.country}</Select.Option>\n                    })}\n                </Select>\n                {formik.touched.country && formik.values.country === \"\" && console.log(formik.errors.country)}\n            </Form.Item>\n            <Form.Item label=\"City\">\n                <Select\n                    name='city'\n                    onChange={city => (formik.setFieldValue('city', city))}\n                    value={formik.values.city}>\n                    {Cities.map((c, index) => {\n                        return <Select.Option key={index} value={c}>{c}</Select.Option>\n                    })}\n\n                </Select>\n                {formik.touched.city && formik.errors.city &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.city}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Description\">\n                <Input.TextArea name='description' {...formik.getFieldProps('description')} />\n                {formik.touched.description && formik.errors.description &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.description}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Event Date\">\n                <DatePicker\n                    name='eventDate'\n                    onChange={date => (formik.setFieldValue('eventDate', date))}\n                    value={formik.values.eventDate}\n                    className=\"input\"\n                    showTime\n                    format=\"YYYY-MM-DD HH:mm:ss\" />\n                {formik.touched.eventDate && formik.errors.eventDate &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.eventDate}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Ticket Price\">\n                <InputNumber\n                    name='ticketprice'\n                    onChange={price => formik.setFieldValue('ticketprice', price)}\n                    value={formik.values.ticketprice}\n                    style={{ width: \"25.2rem\" }} />\n                {formik.touched.ticketprice && formik.errors.ticketprice &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.ticketprice}</pre>}\n            </Form.Item>\n            <Form.Item label=\"No of available tickets\">\n                <Input\n                    name='availabletickets'\n                    /* onChange={tickets => formik.setFieldValue('availabletickets', tickets)} */\n                    {...formik.getFieldProps('availabletickets')}\n                    value={formik.values.availabletickets}\n                    style={{ width: \"25.2rem\" }} />\n                {formik.touched.availabletickets && formik.errors.availabletickets &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.availabletickets}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Event Image\">\n                <Upload name='image' action={eventImageUpload}>\n                    <AntdButton icon={<UploadOutlined />}>Click to Upload</AntdButton>\n                </Upload>\n            </Form.Item>\n            <Form.Item >\n                <Button color=\"green\" disabled={Object.keys(formik.errors).length !== 0} htmlType=\"submit\">Submit</Button>\n                <Button color=\"grey\" type=\"button\" onClick={closeDrawer}>Cancel</Button>\n            </Form.Item>\n        </Form>\n    )\n\n\n}\n\n\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/logoutAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loadUserInfo.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/Users/loginAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventTypeReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/getTypesAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventTypes.js",["164","165","166","167","168"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventTypes/eventTypeCUD.js",[],["169","170"],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/animations.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/CountryCityDATA.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/EventEditForm.js",["171","172","173"],"import { useFormik } from 'formik';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { myValidationSchema } from './EventForm';\nimport {\n    Form,\n    Input,\n    Select,\n    DatePicker,\n    InputNumber,\n    Upload,\n    Button as AntdButton\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Button } from 'semantic-ui-react';\nimport { eventsUrls, uploadImageUrl } from '../../redux/api';\nimport axios from 'axios';\nimport { editToast } from '../../common/Notifications';\n\nexport const EventEditForm = ({ eventToEdit, closeEDrawer }) => {\n\n\n    //retrieve event types array from evTypes reducer\n    const { eventTypes } = useSelector(state => state.eventTypesState);\n    const { event } = useSelector(state => state.eventState);\n\n    useEffect(() => {\n     \n        console.log(event);\n    }, [])\n\n\n    //Set up Event Object to object\n    const initialValues = {\n        eventName: event.eventName,\n        description: event.description,\n        country: event.country,\n        city: event.city,\n        availabletickets: event.availableTickets,\n        ticketprice: event.ticketPrice,\n        eventtypeid: event.eventType.id,\n        eventDate: null,\n        image: event.imagePath,\n    }\n\n    //Set up formik object to handle the form\n    const formik = useFormik({\n        validationSchema: myValidationSchema,\n        initialValues: initialValues,\n    })\n\n    //Image upload logic\n    const eventImageUpload = async (file) => {\n        let formData = new FormData();\n        formData.append('file', file);\n        let response = await axios.post(uploadImageUrl, formData);\n        //Assign response to image path\n        formik.values.image = response.data;\n    }\n\n\n    //Country / City Dropdown logic\n    const [CountryCity, setCountryCity] = useState([]);\n    const [Cities, setCities] = useState([]);\n\n    //fetch event types for form event type dropdown from the api on component load\n    useEffect(() => {\n\n        const fetchCountryAPI = async () => {\n            let response = await axios.get(\"https://countriesnow.space/api/v0.1/countries\");\n            setCountryCity(response.data.data);\n        }\n        fetchCountryAPI();\n    }, [])\n\n    const submitHandler = async (ev) => {\n        console.log(ev);\n        await axios.patch(eventsUrls.edit(event.id), ev)\n        closeEDrawer();\n        editToast(\"The event Has been Updated! ✅\");\n    }\n\n\n    return (\n        <Form\n            className=\"eventForm\"\n            wrapperCol={{ span: 26 }}\n            layout=\"vertical\"\n            onFinish={() => submitHandler(formik.values)}\n        >\n            <Form.Item label=\"Event Name\">\n                <Input name='eventName' {...formik.getFieldProps('eventName')} />\n                {formik.touched.eventName && formik.errors.eventName &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.eventName}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Event Type\">\n                <Select\n                    name='eventtypeid'\n                    onChange={evtype => formik.setFieldValue('eventtypeid', evtype)}\n                    value={formik.values.eventtypeid}>\n                    {eventTypes.map(eType => {\n                        return <Select.Option value={eType.id}>{eType.name}</Select.Option>\n                    })}\n                </Select>\n                {formik.touched.eventtypeid && formik.errors.eventtypeid &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.eventtypeid}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Country\">\n                <Select\n                    name='country'\n                    onChange={country => formik.setFieldValue('country', country)}\n                    onSelect={country => ((setCities(CountryCity.filter(x => x.country == country)[0].cities), formik.setFieldValue('country', country)))}\n                    value={formik.values.country}>\n                    {CountryCity.map(c => {\n                        return <Select.Option value={c.country}>{c.country}</Select.Option>\n                    })}\n                </Select>\n                {formik.touched.country && formik.values.country === \"\" && console.log(formik.errors.country)}\n            </Form.Item>\n            <Form.Item label=\"City\">\n                <Select\n                    name='city'\n                    onChange={city => (formik.setFieldValue('city', city))}\n                    value={formik.values.city}>\n                    {Cities.map((c, index) => {\n                        return <Select.Option key={index} value={c}>{c}</Select.Option>\n                    })}\n\n                </Select>\n                {formik.touched.city && formik.errors.city &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.city}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Description\">\n                <Input.TextArea name='description' {...formik.getFieldProps('description')} />\n                {formik.touched.description && formik.errors.description &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.description}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Event Date\">\n\n                <DatePicker\n                    name='eventDate'\n                    onChange={date => (formik.setFieldValue('eventDate', date))}\n                    value={formik.values.eventDate}\n                    className=\"input\"\n                    showTime\n                    format=\"YYYY-MM-DD HH:mm:ss\" />\n                {formik.touched.eventDate && formik.errors.eventDate &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.eventDate}</pre>}\n\n            </Form.Item>\n            <Form.Item label=\"Ticket Price\">\n                <InputNumber\n                    name='ticketprice'\n                    onChange={price => formik.setFieldValue('ticketprice', price)}\n                    value={formik.values.ticketprice}\n                    style={{ width: \"25.2rem\" }} />\n                {formik.touched.ticketprice && formik.errors.ticketprice &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.ticketprice}</pre>}\n            </Form.Item>\n            <Form.Item label=\"No of available tickets\">\n                <Input\n                    name='availabletickets'\n                    /* onChange={tickets => formik.setFieldValue('availabletickets', tickets)} */\n                    {...formik.getFieldProps('availabletickets')}\n                    value={formik.values.availabletickets}\n                    style={{ width: \"25.2rem\" }} />\n                {formik.touched.availabletickets && formik.errors.availabletickets &&\n                    <pre style={{ color: \"red\", marginTop: \"0.1rem\" }}>{formik.errors.availabletickets}</pre>}\n            </Form.Item>\n            <Form.Item label=\"Event Image\">\n                <Upload name='image' action={eventImageUpload}>\n                    <AntdButton icon={<UploadOutlined />}>Click to Upload</AntdButton>\n                </Upload>\n            </Form.Item>\n            <Form.Item >\n                <Button color=\"blue\" disabled={Object.keys(formik.errors).length > 1} htmlType=\"submit\">Update</Button>\n                <Button color=\"grey\" type=\"button\" onClick={closeEDrawer}>Cancel</Button>\n            </Form.Item>\n        </Form>\n    )\n}\n","/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/eventAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/common/Notifications.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/actions/eventActions/loadEventAction.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/redux/reducers/eventReducer.js",[],"/Users/anascheriet/Documents/Projects/React/events_web_app/src/Components/events/HHHHH.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"182","line":6,"column":8,"nodeType":"180","messageId":"181","endLine":6,"endColumn":15},{"ruleId":"178","severity":1,"message":"183","line":9,"column":10,"nodeType":"180","messageId":"181","endLine":9,"endColumn":25},{"ruleId":"178","severity":1,"message":"184","line":13,"column":10,"nodeType":"180","messageId":"181","endLine":13,"endColumn":15},{"ruleId":"178","severity":1,"message":"185","line":14,"column":10,"nodeType":"180","messageId":"181","endLine":14,"endColumn":22},{"ruleId":"178","severity":1,"message":"186","line":22,"column":9,"nodeType":"180","messageId":"181","endLine":22,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":16,"column":6,"nodeType":"189","endLine":16,"endColumn":8,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":27,"column":9,"nodeType":"193","endLine":27,"endColumn":79},{"ruleId":"191","severity":1,"message":"192","line":33,"column":9,"nodeType":"193","endLine":33,"endColumn":96},{"ruleId":"178","severity":1,"message":"194","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":14},{"ruleId":"178","severity":1,"message":"195","line":2,"column":16,"nodeType":"180","messageId":"181","endLine":2,"endColumn":21},{"ruleId":"178","severity":1,"message":"196","line":2,"column":23,"nodeType":"180","messageId":"181","endLine":2,"endColumn":29},{"ruleId":"178","severity":1,"message":"197","line":2,"column":31,"nodeType":"180","messageId":"181","endLine":2,"endColumn":39},{"ruleId":"191","severity":1,"message":"192","line":73,"column":11,"nodeType":"193","endLine":73,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":74,"column":11,"nodeType":"193","endLine":74,"endColumn":15},{"ruleId":"198","severity":2,"message":"199","line":6,"column":31,"nodeType":"180","endLine":6,"endColumn":42},{"ruleId":"178","severity":1,"message":"179","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"200","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":21},{"ruleId":"178","severity":1,"message":"201","line":10,"column":8,"nodeType":"180","messageId":"181","endLine":10,"endColumn":13},{"ruleId":"178","severity":1,"message":"202","line":11,"column":10,"nodeType":"180","messageId":"181","endLine":11,"endColumn":20},{"ruleId":"187","severity":1,"message":"188","line":31,"column":8,"nodeType":"189","endLine":31,"endColumn":10,"suggestions":"203"},{"ruleId":"204","severity":1,"message":"205","line":138,"column":88,"nodeType":"206","messageId":"207","endLine":138,"endColumn":90},{"ruleId":"178","severity":1,"message":"208","line":3,"column":39,"nodeType":"180","messageId":"181","endLine":3,"endColumn":43},{"ruleId":"178","severity":1,"message":"209","line":3,"column":54,"nodeType":"180","messageId":"181","endLine":3,"endColumn":63},{"ruleId":"178","severity":1,"message":"210","line":5,"column":35,"nodeType":"180","messageId":"181","endLine":5,"endColumn":40},{"ruleId":"178","severity":1,"message":"211","line":20,"column":13,"nodeType":"180","messageId":"181","endLine":20,"endColumn":17},{"ruleId":"187","severity":1,"message":"188","line":26,"column":8,"nodeType":"189","endLine":26,"endColumn":20,"suggestions":"212"},{"ruleId":"174","replacedBy":"213"},{"ruleId":"176","replacedBy":"214"},{"ruleId":"178","severity":1,"message":"215","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":21},{"ruleId":"187","severity":1,"message":"216","line":30,"column":8,"nodeType":"189","endLine":30,"endColumn":10,"suggestions":"217"},{"ruleId":"204","severity":1,"message":"205","line":112,"column":88,"nodeType":"206","messageId":"207","endLine":112,"endColumn":90},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Content' is defined but never used.","'EventsDashboard' is defined but never used.","'HHHHH' is defined but never used.","'loadUserInfo' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["220"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Form' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useSelector\" is called in function \"dashboard\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'useSelector' is defined but never used.","'axios' is defined but never used.","'eventsUrls' is defined but never used.",["221"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Menu' is defined but never used.","'IconGroup' is defined but never used.","'Space' is defined but never used.","'user' is assigned a value but never used.",["222"],["218"],["219"],"'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'event'. Either include it or remove the dependency array.",["223"],"no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"224","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [dispatch]",{"range":"231","text":"232"},{"range":"233","text":"232"},"Update the dependencies array to be: [dispatch, eventTypes]",{"range":"234","text":"235"},"Update the dependencies array to be: [event]",{"range":"236","text":"237"},[466,468],"[dispatch]",[1213,1215],[989,1001],"[dispatch, eventTypes]",[882,884],"[event]"]